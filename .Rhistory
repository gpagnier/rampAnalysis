main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
#To do gamble propensity Value
#POSTER7
valueMeans<-c(mean(lowvaluegamblepropensity),mean(midvaluegamblepropensity),mean(highvaluegamblepropensity))
pg7<-barplot(valueMeans,names.arg = c("Low EV","Mid EV","High EV"),ylim=c(0,80),ylab="Gamble Propensity",main="Effect of Expected Value (EV) on gamble propensity; n=87")
valueSems<-c((sd(lowvaluegamblepropensity)/sqrt(length(lowvaluegamblepropensity))),(sd(midvaluegamblepropensity)/sqrt(length(midvaluegamblepropensity))),(sd(highvaluegamblepropensity)/sqrt(length(highvaluegamblepropensity))))
valueSds<-c((sd(lowvaluegamblepropensity)),(sd(midvaluegamblepropensity)),(sd(highvaluegamblepropensity)))
arrows(pg7,valueMeans-valueSems,pg7,valueMeans+valueSems,lwd=2,angle=90,code=3)
pg7<-barplot(valueMeans,names.arg = c("Low EV","Mid EV","High EV"),ylim=c(0,80),ylab="Gamble Propensity",main="Effect of Expected Value (EV) on gamble propensity; n=53")
valueSems<-c((sd(lowvaluegamblepropensity)/sqrt(length(lowvaluegamblepropensity))),(sd(midvaluegamblepropensity)/sqrt(length(midvaluegamblepropensity))),(sd(highvaluegamblepropensity)/sqrt(length(highvaluegamblepropensity))))
valueSds<-c((sd(lowvaluegamblepropensity)),(sd(midvaluegamblepropensity)),(sd(highvaluegamblepropensity)))
arrows(pg7,valueMeans-valueSems,pg7,valueMeans+valueSems,lwd=2,angle=90,code=3)
ntN
subplotRT=FALSE
subplotGD=F
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-T
subOddsCond<-'lowp'
MagFilter<-F
subMagCond<-'low'
#Subgroup 2
for(i in Participants){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
#guillaume2
#Subgroup 2
#Looping through subgroups to get INDIVIDUAL graphs
# indivd5prime<-intN
subplotRT=FALSE
subplotGD=F
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-T
subOddsCond<-'midp'
MagFilter<-F
subMagCond<-'low'
#Subgroup 2
for(i in Participants){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
subplotRT=FALSE
subplotGD=F
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-T
subOddsCond<-'highp'
MagFilter<-F
subMagCond<-'low'
#Subgroup 2
for(i in Participants){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
#To do gamble propensity Value
#POSTER7
valueMeans<-c(mean(lowvaluegamblepropensity),mean(midvaluegamblepropensity),mean(highvaluegamblepropensity))
pg7<-barplot(valueMeans,names.arg = c("Low EV","Mid EV","High EV"),ylim=c(0,80),ylab="Gamble Propensity",main="Effect of Expected Value (EV) on gamble propensity; n=140")
valueSems<-c((sd(lowvaluegamblepropensity)/sqrt(length(lowvaluegamblepropensity))),(sd(midvaluegamblepropensity)/sqrt(length(midvaluegamblepropensity))),(sd(highvaluegamblepropensity)/sqrt(length(highvaluegamblepropensity))))
valueSds<-c((sd(lowvaluegamblepropensity)),(sd(midvaluegamblepropensity)),(sd(highvaluegamblepropensity)))
arrows(pg7,valueMeans-valueSems,pg7,valueMeans+valueSems,lwd=2,angle=90,code=3)
#sfnValueChange
#All participants
compMeans<-c(oddsScoreMean(d,time='early'),oddsScoreMean(d,time='mid'),oddsScoreMean(d,time='late'))
compSds<-c(oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3,cex=.8)
#sfnValueChange
#All participants
compMeans<-c(oddsScoreMean(d,time='early'),oddsScoreMean(d,time='mid'),oddsScoreMean(d,time='late'))
compSds<-c(oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants",cex=.8)
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
#sfnValueChange
#All participants
compMeans<-c(oddsScoreMean(d,time='early'),oddsScoreMean(d,time='mid'),oddsScoreMean(d,time='late'))
compSds<-c(oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants",cex=.4)
compMeans
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants",cex.main=.8)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants",cex.main=.9)
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
#sfnValueChange
#All participants
compMeans<-c(oddsScoreMean(d,time='early'),oddsScoreMean(d,time='mid'),oddsScoreMean(d,time='late'))
compSds<-c(oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; All participants",cex.main=.9,cex.axis = .9,cex.lab=.9)
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
