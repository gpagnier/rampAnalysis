library(mosaic)
d<-read.csv(file="C:/Users/lab/Documents/GitHub/rampAnalysis/ramp8.22Pilot.csv",sep=",")
d<-read.csv(file="C:/files.brown.edu/Home/gpagnier/GitHub/rampAnalysis/ramp8.22Pilot.csv",sep=",")
d<-read.csv(file="//files.brown.edu/Home/gpagnier/GitHub/rampAnalysis/ramp8.22Pilot.csv",sep=",")
#d<-read.csv(file="C:/Users/lab/Documents/GitHub/rampAnalysis/ramp69.csv",sep=",")
d0<-read.csv(file.choose(),header=TRUE)
#d<-d0
d[d==""] <- NA
d$gambleDelay<-d$gambleDelay/1000
d<-d0
d[d==""] <- NA
d$gambleDelay<-d$gambleDelay/1000
d$binsTime=0;
#Clearing pictures
graphics.off()
#Getting rid of any trial which gamble interrupted too early
d<-filter(d,gambleDelay<5.6)
#d<-read.csv(file="C:/Users/lab/Documents/GitHub/rampAnalysis/ramp69.csv",sep=",")
d0<-read.csv(file.choose(),header=TRUE)
d<-d0
d[d==""] <- NA
d$gambleDelay<-d$gambleDelay/1000
d$binsTime=0;
#Clearing pictures
graphics.off()
#Getting rid of any trial which gamble interrupted too early
#d<-filter(d,gambleDelay<5.6)
histogram(d$gambleDelay,breaks=50,xlim=c(0,7),main="Where gambles interrupted trials. All trials",xlab="seconds into trial gamble appeared")
#Getting rid of any trial which gamble interrupted too early
#d<-filter(d,gambleDelay<5.6)
histogram(d$gambleDelay,breaks=50,xlim=c(0,8),main="Where gambles interrupted trials. All trials",xlab="seconds into trial gamble appeared")
colnames(d)[1]<-"Trialid"
binTimeCalc<-function(row){
if(d[row,3]==0){
return(0)
} else if (d[row,3]>0&d[row,3]<1){
return(.5)
} else if (d[row,3]>1&d[row,3]<2.5){
return(1.75)
} else if (d[row,3]>2.5&d[row,3]<3){
return(2.75)
} else if (d[row,3]>3&d[row,3]<3.4){
return(3.2)
} else if (d[row,3]>3.4&d[row,3]<4.75){
return(4.1)
} else if (d[row,3]>4.75&d[row,3]<5.25){
return(5.1)
} else if (d[row,3]>5.25&d[row,3]<5.6){
return(5.5)
} else{
return(5.5)
}
}
#For new data set
binTimeCalc<-function(d,row){
if(d[row,3]==0){
return(0)
} else if (d[row,3]>0&d[row,3]<1){
return(.8)
} else if (d[row,3]>1&d[row,3]<1.5){
return(1.2)
} else if (d[row,3]>1.5&d[row,3]<2.5){
return(3)
} else if (d[row,3]>2.5&d[row,3]<3){
return(2.8)
} else if (d[row,3]>3&d[row,3]<3.5){
return(3.2)
} else if (d[row,3]>3.5&d[row,3]<4.5){
return(4)
} else if (d[row,3]>4.5&d[row,3]<4.8){
return(4.7)
} else if (d[row,3]>4.8&d[row,3]<5){
return(4.9)
} else if (d[row,3]>5&d[row,3]<5.2){
return(5.1)
} else if (d[row,3]>5.2&d[row,3]<5.8){
return(5.3)
} else{
return(999)
}
}
for(i in 1:nrow(d)){
d[i,10]=binTimeCalc(d,i)
}
#Adding which condition trial was in
#For new data set
magCondCalc<-function(d,row){
if(d[row,7]==1|d[row,7]==2){
return("low")
} else if (d[row,7]==3|d[row,7]==4){
return("mid")
} else if (d[row,7]==5|d[row,7]==6){
return("high")
} else{
return("null")
}
}
for(i in 1:nrow(d)){
d[i,11]=magCondCalc(d,i)
}
colnames(d)[11]<-"magCond"
oddsCondCalc<-function(d,row){
if(d[row,1]==21|d[row,1]==22|d[row,1]==23|d[row,1]==24|d[row,1]==25|d[row,1]==26){
return("lowp")
} else if (d[row,1]==1|d[row,1]==2|d[row,1]==3|d[row,1]==4|d[row,1]==5|d[row,1]==6){
return("midp")
} else if (d[row,1]==31|d[row,1]==32|d[row,1]==33|d[row,1]==34|d[row,1]==35|d[row,1]==36){
return("highp")
} else{
return("catch")
}
}
for(i in 1:nrow(d)){
d[i,12]=oddsCondCalc(d,i)
}
colnames(d)[12]<-"oddsCond"
head(d)
participants<-unique(d$uniqueid)
nParticipants<- length(unique(d$uniqueid))
nParticipants
#Check for catch trials
dcatch<-filter(d,Trialid==75|Trialid==86)[,c(1,6,9)]
dcatch[order(dcatch$Trialid),]
catch<-for(i in 1:nrow(dcatch)){
if(dcatch[i,1]==85&dcatch[i,2]=="gamble"){
noCatch<-c(noCatch,dcatch[i,3])
}else if(dcatch[i,1]==75&dcatch[i,2]=="success"){
noCatch<-c(noCatch,dcatch[i,3])
}else if(dcatch[i,1]==75&dcatch[i,2]=="fail"){
noCatch<-c(noCatch,dcatch[i,3])
}
}
nParticipants<- length(unique(d$uniqueid))
Participants<-unique(d$uniqueid)
nParticipants
###Behavioral analyses
##Reaction time
#Whenever they gambled
gambleRTs<-d$gambleRT[d$gambleRT!=0]
histogram(gambleRTs,main="Aggregated gamble RTs",breaks=70)
#Whenever they claimed 'boring' reward
outcomeRTs<-d$outcomeRT[d$outcomeRT!=0]
histogram(outcomeRTs,main="Aggregated outcome RTs",breaks=70)
#Printing experiment times in minutes CONFIRM PSITURK TRACKS IN MILLISECONDS
expTimes<-((unique(d$expTime,na.rm=TRUE)/1000)/60)
histogram(expTimes,main="Experiment Time (in minutes)",breaks=50)
histogram(expTimes,main="Experiment Time (in minutes)",breaks=50,xlim=c(0,60))
dgamble<-filter(d,gambleDelay!=0)
dBehavioralTotal<-dgamble %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime,na.rm=TRUE)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
head(dBehavioralTotal)
#Overall preference for gambling
histogram(dBehavioralTotal$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall participant propensity to gamble; n =",toString(sum(dBehavioralTotal$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
dlowG<-filter(dBehavioralTotal,percentageGambled<6)
noGamblers<-dlowG$uniqueid
dhighg<-filter(dBehavioralTotal,percentageGambled>95)
allGamblers<-dhighg$uniqueid
removeIds<-c(noGamblers,allGamblers)
#Removing any subjects from dataset if needed, using unique ids in vector removeIds
for(i in removeIds){
d<-d[!(d$uniqueid==i),]
}
nParticipants<- length(unique(d$uniqueid))
Participants<-unique(d$uniqueid)
nParticipants
dgamble<-filter(d,gambleDelay!=0)
dBehavioral<-dgamble %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
histogram(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall participant propensity to gamble; n =",toString(sum(dBehavioralTotal$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#Adding another column 1 if they gambled, 0 if they didn't
#This will be outcome variable in logistic regression
for (i in 1:length(dgamble$response)){
if(dgamble$response[i]=='gamble'){
dgamble$gambled[i]=1
} else {
dgamble$gambled[i]=0
}
}
#Logistic regression for gambled
mlog<-glm(gambled~gambleDelay+magCond+oddsCond+trialNumber,data=dgamble,family="binomial");
summary(mlog)
#Preference for low gambles
dlow<-filter(dgamble,standardGamble==1|standardGamble==2)
dBehavioral<-dlow %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
histogram(dBehavioral$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dlow$gambleRT,0),breaks=50,main="Reaction Time for low mag gambles",xlab="Reaction time")
dlow2<-dlow %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(gambleRT))
dlow2$seconds<-dlow2$binsTime
dlow2<-filter(dlow2, binsTime<6)
plot(dlow2$seconds,dlow2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Low mag; Gamble propensity; n =",toString(sum(dlow2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dlow2
#Plotting RTs with sd
dlowRT<-filter(dlow,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dlowRT$seconds<-dlowRT$binsTime
plot(dlowRT$seconds,dlowRT$medianRT,xlim = c(0,8),ylim=c(200,2500),main=paste("Low mag; median RT with sd; n =",toString(sum(dlow2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#Preference for mid gambles
dmid<-filter(dgamble,standardGamble==4|standardGamble==3)
dBehavioral<-dmid %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
histogram(dBehavioral$percentageGambled,breaks=50,ylim=c(0,25),xlim=c(-5,100),main=paste("Propensity to gamble on mid-mag gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dmid$gambleRT,0),breaks=50,main="Reaction Time for mid mag gambles",xlab="Reaction time")
dmid2<-dmid %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dmid2$seconds<-dmid2$binsTime
plot(dmid2$seconds,dmid2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Mid mag; Gamble propensity; n =",toString(sum(dmid2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dmid2
#Plotting RTs with sd
dmidRT<-filter(dmid,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dmidRT$seconds<-dmidRT$binsTime
plot(dmidRT$seconds,dmidRT$medianRT,xlim = c(0,8),ylim=c(0,2500),main=paste("Mid mag; median RT with sd; n =",toString(sum(dmid2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#Preference for high gambles
dhigh<-filter(dgamble,standardGamble==5|standardGamble==6)
dBehavioral<-dhigh %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
histogram(dBehavioral$percentageGambled,breaks=50,ylim=c(0,25),xlim=c(-5,100),main=paste("Propensity to gamble on high-mag gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dhigh$gambleRT,0),breaks=50,main="Reaction Time for high mag gambles",xlab="Reaction time")
dhigh2<-dhigh %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dhigh2$seconds<-dhigh2$binsTime
plot(dhigh2$seconds,dhigh2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("High mag; Gamble propensity; n =",toString(sum(dhigh2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dhigh2
#Plotting RTs with sd
dhighRT<-filter(dhigh,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dhighRT$seconds<-dhighRT$binsTime
plot(dhighRT$seconds,dhighRT$medianRT,xlim = c(0,8),ylim=c(0,2500),main=paste("High mag; median RT with sd; n =",toString(sum(dhigh2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# Low payout
dlowp<-filter(dgamble,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
dBehavioralLowp<-dlowp %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
dBehavioralLowp
histogram(dBehavioralLowp$percentageGambled,breaks=50,ylim=c(0,70),xlim=c(-5,100),main=paste("Propensity to gamble on low payout gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dlowp$gambleRT,0),breaks=50,main="Reaction Time for low odds gambles",xlab="Reaction time")
dlowp2<-dlowp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100)
)
dlowp2$seconds<-dlowp2$binsTime
plot(dlowp2$seconds,dlowp2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Low odds; Gamble propensity; n =",toString(sum(dlowp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dlowp2
#Plotting RTs with sd
dlowRT<-filter(dlowp,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dlowRT$seconds<-dlowRT$binsTime
plot(dlowRT$seconds,dlowRT$medianRT,xlim = c(0,8),ylim=c(0,2500),main=paste("Low Odds; median RT with sd; n =",toString(sum(dlowp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# Mid payout
dmidp<-filter(dgamble,Trialid==1|Trialid==2|Trialid==3|Trialid==4|Trialid==5|Trialid==6)
dBehavioral<-dmidp %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
histogram(dBehavioral$percentageGambled,breaks=50,ylim=c(0,70),xlim=c(-5,100),main=paste("Propensity to gamble on mid odds gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dmidp$gambleRT,0),breaks=50,main="Reaction Time for mid odds gambles",xlab="Reaction time")
dmidp2<-dmidp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100)
)
dmidp2$seconds<-dmidp2$binsTime
plot(dmidp2$seconds,dmidp2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Mid odds; Gamble propensity; n =",toString(sum(dmidp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dmidp2
#Plotting RTs with sd
dmidRT<-filter(dmidp,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dmidRT$seconds<-dmidRT$binsTime
plot(dmidRT$seconds,dmidRT$medianRT,xlim = c(0,8),ylim=c(0,2500),main=paste("Mid Odds; median RT with sd; n =",toString(sum(dmidp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# High payout
dhighp<-filter(dgamble,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dBehavioral<-dhighp %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[1],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
dBehavioral
histogram(dBehavioral$percentageGambled,breaks=50,ylim=c(0,70),xlim=c(-5,100),main=paste("Propensity to gamble on high payout gambles; n =",toString(sum(dBehavioral$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
histogram(setdiff(dhighp$gambleRT,0),breaks=50,main="Reaction Time for high odds gambles",xlab="Reaction time")
dhighp2<-dhighp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=round(mean(gambleRT)),
sdRT=sd(gambleRT))
dhighp2$seconds<-dhighp2$binsTime
plot(dhighp2$seconds,dhighp2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("High odds; Gamble propensity; n =",toString(sum(dhighp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
dhighp2
#Plotting RTs with sd
dhighRT<-filter(dhighp,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
dhighRT$seconds<-dhighRT$binsTime
plot(dhighRT$seconds,dhighRT$medianRT,xlim = c(0,8),ylim=c(200,2500),main=paste("High Odds; Reaction time with sd; n =",toString(sum(dhighp2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#Overall plot of gambleDelay and percentage gambled
d2<-d %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d2$seconds<-d2$binsTime
#Number of trials per bin - this is a check to confirm that bin sizes are reasonable
plot(d2$seconds,d2$trials,xlim = c(-.5,8),
main=paste("Number of trials per bin; n =",toString(sum(d2$trials)),"trials;",nParticipants,"participants"),
xlab="Seconds into trial",ylab="Number of trials",pch=19)
#Overall regression of p(gambled) as gambles interrupted trial
d2<-filter(d2,seconds>0)
plot(d2$seconds,d2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Propensity to gamble vs. gamble interruption; n =",toString(sum(d2$trials)),"trials;",nParticipants,"participants"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
m1<-lm(d2$percentageGambled~d2$seconds)
abline(m1)
summary(m1)
#Number of trials per participant
dTrials<-d %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/ntrials*100))
dTrials
histogram(dTrials$ntrials,breaks=50,xlim=c(0,120),ylim=c(0,30),main=paste("Number of trials per participant; ",nParticipants,"participants"),xlab="Number of Trials per participant")
