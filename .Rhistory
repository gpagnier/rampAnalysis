oddsN=rbind(oddsN,oddsNtemp)
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
magN=rbind(magNtemp,magN)
#Breaking down subdf by gambleDelay
d4<-dsub[dsub$gambleDelay!=0,] %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (plotGD){
gamblePlot(dsub,line=T,title=paste("id#",toString(unique(dsub$uniqueid))," oddsScore: ",toString(oddsNtemp[1,1])))
# plot(d4$seconds,d4$percentageGambled,xlim = c(0,7),ylim = c(0,100),
#      main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
#      xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (plotRT){
totalRTPlot(dsub,line=T,title=paste("Indiv graph; Participant# ",toString(unique(dsub$uniqueid))))
# plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
#      main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is to check for gamble ramp
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0,Trialid!=75|86),family="binomial")
#This is glm for RT by gamble Delay
mtempRT<-lm(dsubgambled$gambleRT~dsubgambled$gambleDelay)
#This checks to see if any participant is gamble ramping
if(summary(mlogtemp)$coefficients[8]<.1 & summary(mlogtemp)$coefficients[2]>0){
intN<-c(intN,i)
}
#Check to see if any participant has a RT that's suspiciously low..
if(mean(setdiff(dsub$outcomeRT,0),na.rm=TRUE)<200){
botN<-c(botN,i)
}
#Check to see if participant has a downwards decreasing RT ramp
if(summary(mtempRT)$coefficients[8]<.1 & summary(mtempRT)$coefficients[2]<0){
rtn<-c(rtn,i)
}
#Making acf coefficient vectors
acf1<-c(acf1,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[2])
acf2<-c(acf2,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[3])
acf3<-c(acf3,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[4])
acf4<-c(acf4,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[5])
acf5<-c(acf5,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[6])
#Making df of gambleSlopes, rtSlopes, and i (who was just analyzed)
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
run<-c(run,i)
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
a<-oddsN[order(oddsN$OddsGamblingScore),]
#oddsN is the median split of people who respond well to odds
oddsN<-as.integer(a$Participant[(length(a$Participant)/2):length(a$Participant)])
#Quartile split
oddsN<-oddsNtable[(length(oddsNtable)/2):(length(oddsNtable))]
#illogical Gamblers
reverseOddsN<-as.integer(a[1:(nrow(a)/4),]$Participant)
par(bty='n')
failCatchId
length)failCatchId
length(failCatchId)
fail1
fail2
fail3
fail4
fail1
fail5
fail6
g<-c(fail4,fail5,fail6)
d5<-dgamble[dgamble$uniqueid %in% g,]
summaryMagFilter=F
summaryMagCond='low'
summaryOddsFilter=F
summaryOddsCond='midp'
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,50),title='MidValue,ResponsiveToValue')
d5<-dgamble[dgamble$uniqueid %in% g,]
unique(d5$uniqueid)
g
g<-c(fail4,fail5,fail6)
g
fail4
fail5
fail6
fail3
g<-c(g,fail3)
g
d5<-dgamble[dgamble$uniqueid %in% g,]
#This is if you want intersection of two groups
d5<-dgamble[dgamble$uniqueid %in% intersect(highGamblers,noProx),]
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,50),title='MidValue,ResponsiveToValue')
fail0
fail1
length(catchSuccessId)
g<-c(catchSuccessId)
g<-c(catchSuccessId,fail1)
d5<-dgamble[dgamble$uniqueid %in% g,]
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,50),title='MidValue,ResponsiveToValue')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,50),title='CatchSuccess')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccess')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60),title='CatchSuccess')
totalRTPlot(d5,line=T,title="CatchSuccess",ylimit=c(800,1000))
#EV sensitivity early mid and late within subject
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem',time='early'),oddsScoreEb(d5,type='sem',time='mid'),oddsScoreEb(d5,type='sem',time='late'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; Within-session all data")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,int='early'),oddsScoreMean(d5,int='mid'),oddsScoreMean(d5,int='late'))
compSds<-c(oddsScoreEb(d5,type='sem',int='early'),oddsScoreEb(d5,type='sem',int='mid'),oddsScoreEb(d5,type='sem',int='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; When interruption happened ; all data")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; When interruption happened;catchSuccess")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
totalRTPlot(dlow,line=T,ylimit=c(800,1100),title="rtRampers only; n=6")
#This is if you want filters
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=F
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60),title='CatchSuccessLowMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessLowMag')
unique(d5$magCond)
d5<-dgamble[dgamble$uniqueid %in% g,]
summaryMagCond='mid'
#This is if you want filters
summaryMagFilter=T
summaryMagCond='mid'
summaryOddsFilter=F
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessLowMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessMidMag')
#This is if you want filters
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessHighMag')
d5<-dgamble[dgamble$uniqueid %in% g,]
#This is if you want filters
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessHighMag')
d5<-dgamble[dgamble$uniqueid %in% g,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,70),title='CatchSuccessHighMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='CatchSuccessHighMag')
d5<-dgamble[dgamble$uniqueid %in% g,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='CatchSuccessHighMag')
d5<-dgamble[dgamble$uniqueid %in% g,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='CatchSuccessHighMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='CatchSuccessHighMag')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='CatchSuccessHighMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='CatchSuccessLowMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='ValueSensitiveLowMag')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='ValueSensitiveLowValue')
totalRTPlot(d5,line=T,title="CatchSuccess",ylimit=c(800,1000))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='ValueSensitiveLowValue')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='ValueSensitiveHighValue')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='midp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90),title='ValueSensitiveMidValue')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60),title='ValueSensitiveMidValue')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60),title='ValueSensitiveMidValue')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60),title='ValueSensitiveLowValue')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,50),title='ValueSensitiveLowValue')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40),title='ValueSensitiveLowValue')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
#This is if you want filters
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40),title='ValueSensitiveHighMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,50),title='ValueSensitiveHighMag')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=T
summaryMagCond='high'
#This is if you want filters
summaryMagFilter=T
summaryMagCond='mid'
summaryOddsFilter=F
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,50),title='ValueSensitiveMidMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60),title='ValueSensitiveMidMag')
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
#This is if you want filters
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=F
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60),title='ValueSensitiveMidMag')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60),title='ValueSensitiveLowMag')
