plotGD=T
#Add in knobs for different sub categories (though this number is very small....)
plotRT=F
#Participants is default (all participants)
#If you want to run sub groups, go to bottom of script
for(i in Participants){
print(i)
dsub<-d[d$uniqueid==i,]
dsubgamble<-filter(dsub,gambleDelay!=0,Trialid!=75|86)
dsubgambled<-filter(dsub,gambleDelay!=0,Trialid!=75|86,gambleRT!=0)
dsubignored<-filter(dsub,ignoreRT!=0,gambleDelay!=0,Trialid!=75,86)
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
oddsN=rbind(oddsN,oddsNtemp)
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
magN=rbind(magNtemp,magN)
#Breaking down subdf by gambleDelay
d4<-dsub[dsub$gambleDelay!=0,] %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (plotGD){
gamblePlot(dsub,line=T)
# plot(d4$seconds,d4$percentageGambled,xlim = c(0,7),ylim = c(0,100),
#      main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
#      xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (plotRT){
totalRTPlot(dsub,ylimit=c(200,1500),title='dsub')
# plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
#      main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is to check for gamble ramp
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0,Trialid!=75|86),family="binomial")
#This is glm for RT by gamble Delay
mtempRT<-lm(dsubgambled$gambleRT~dsubgambled$gambleDelay)
#This checks to see if any participant is gamble ramping
if(summary(mlogtemp)$coefficients[8]<.1 & summary(mlogtemp)$coefficients[2]>0){
intN<-c(intN,i)
}
#Check to see if any participant has a RT that's suspiciously low..
if(mean(setdiff(dsub$outcomeRT,0),na.rm=TRUE)<200){
botN<-c(botN,i)
}
#Check to see if participant has a downwards decreasing RT ramp
if(summary(mtempRT)$coefficients[8]<.1 & summary(mtempRT)$coefficients[2]<0){
rtn<-c(rtn,i)
}
#Making acf coefficient vectors
acf1<-c(acf1,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[2])
acf2<-c(acf2,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[3])
acf3<-c(acf3,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[4])
acf4<-c(acf4,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[5])
acf5<-c(acf5,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[6])
#Making df of gambleSlopes, rtSlopes, and i (who was just analyzed)
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
run<-c(run,i)
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
a<-oddsN[order(oddsN$OddsGamblingScore),]
#oddsN is the median split of people who respond well to odds
oddsN<-as.integer(a$Participant[(length(a$Participant)/2):length(a$Participant)])
#Quartile split
oddsN<-oddsN[(length(oddsN)/2):(length(oddsN))]
par(bty='n')
box(which="plot",lty='solid')
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change/second)',ylab='Individual RT Slopes (ms/second)',pch=16,cex=0.8,main=paste('Gamble slopes vs. RT slopes; n=',nrow(slopeDF)),xlim=c(-.7,.7),ylim=c(-80,50),bty='7')
abline(v=0,col="black")
abline(h=0,col="black")
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='highp'
failCatchId
d5<-dgamble[dgamble$uniqueid %in% intN,]
gamblePlot(d5,orig=T,ylimit=c(20,70),title='Rampers',line=F)
gamblePlot(d5,orig=T,ylimit=c(40,100),title='Rampers',line=F)
unique(d5$uniqueid)
#sfn1
#New way which is better
d5<-dgamble[dgamble$uniqueid %in% rtn,]
d5gamble<-filter(d5,gambleDelay!=0,Trialid!=75,Trialid!=75)
gamblePlot(d5,orig=T,ylimit=c(40,100),title='Rampers',line=F)
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60))
View(totalRTPlot)
totalRTplot(d5,line=F,title="rtRampers")
View(totalRTPlot)
#Plots ignore and gamble propensities on same plot
totalRTPlot<-function(data,line=FALSE,ylimit=c(200,1500),title=""){
data<-filter(data,gambleDelay!=0,Trialid!=75|86)
dgambleRT<-filter(data,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
stderrRT=std.error(gambleRT),
sdRT=sd(gambleRT))
dgambleRT$seconds<-dgambleRT$binsTime
dignoreRT<-filter(data,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
stderrRT=std.error(ignoreRT),
sdRT=sd(ignoreRT))
dignoreRT$seconds<-dignoreRT$binsTime
plot(dgambleRT$seconds,dgambleRT$medianRT,xlim = c(0,8),ylim=ylimit,col='blue',
main=paste("GambleRT vs. gambleDelay;",title,";", "n =",toString(length(data$gambleRT[data$gambleRT!=0])),
"gambled;",toString(length(data$ignoreRT[data$ignoreRT!=0])),
"ignored"),xlab="Seconds into trial",ylab='RT (ms)',pch=19)
for(i in 1:length(dgambleRT$seconds)){
arrows(as.numeric(dgambleRT$seconds[i]),as.numeric(dgambleRT[i,'medianRT']+(as.numeric(dgambleRT[i,'stderrRT']))),as.numeric(dgambleRT$seconds[i]),as.numeric(dgambleRT[i,'medianRT']-(as.numeric(dgambleRT[i,'stderrRT']))),length=0.05, angle=90, code=3)
}
if(line){
abline(lm(dgambleRT$medianRT~dgambleRT$seconds),col='blue')
}
points(dignoreRT$seconds,dignoreRT$medianRT,pch=19,col='orange')
for(i in 1:length(dignoreRT$seconds)){
arrows(as.numeric(dignoreRT$seconds[i]),as.numeric(dignoreRT[i,'medianRT']+(as.numeric(dignoreRT[i,'stderrRT']))),as.numeric(dignoreRT$seconds[i]),as.numeric(dignoreRT[i,'medianRT']-(as.numeric(dignoreRT[i,'stderrRT']))),length=0.05, angle=90, code=3)
}
if(line){
abline(lm(dignoreRT$medianRT~dignoreRT$seconds),col='orange')
}
}
totalRTPlot(d5,line=F,title="rtRampers")
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
failCatchId
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(30,60))
totalRTPlot(d5,line=F,title="failCatch")
d5<-dgamble[dgamble$uniqueid %in% highGamblers,]
#People who gambled a lot
highGamblers<-filter(dBehavioral,percentageGambled>40)$uniqueid
lowGamblers<-filter(dBehavioral,percentageGambled<40)$uniqueid
male<-filter(dsurvey,gender==1)$uniqueid
d5<-dgamble[dgamble$uniqueid %in% highGamblers,]
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90))
totalRTPlot(d5,line=F,title="failCatch")
totalRTPlot(d5,line=F,title="highGamblers")
#sfnValueSensitivity
#All participants
compMeans<-c(oddsScoreMean(d,time='early'),oddsScoreMean(d,time='mid'),oddsScoreMean(d,time='late'))
compSds<-c(oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'),oddsScoreEb(d,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),col='black',
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; all data",cex.main=.9,cex.axis = .9,cex.lab=.9)
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),col='gray',
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; all data",cex.main=.9,cex.axis = .9,cex.lab=.9)
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
#sfn1
#New way which is better
d5<-dgamble[dgamble$uniqueid %in% rtn,]
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; RTrampers")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
par(new=TRUE)
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; failCatch")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; failCatch")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
d5<-dgamble[dgamble$uniqueid %in% highGamblers,]
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; highGamblers")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
imp
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
oddsN
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,90))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,70))
totalRTPlot(d5,line=F,title="highGamblers")
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'),oddsScoreEb(d5,type='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; logical gamblers")
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,110),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; logical gamblers")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,70))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(35,65))
d5<-d
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(35,65))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(0,100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(70,100))
summaryOddsFilter=T
summaryOddsCond='lowp'
d5<-5
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
d<-d5
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
d5<-dgamble
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(70,100))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40))
totalRTPlot(d5,line=F,title="highMagLowValue")
d<-dgamble
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
totalRTPlot(d5,line=F,title="highmagHighValue")
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
d5<-dgamble
summaryMagFilter=T
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40))
totalRTPlot(d5,line=F,title="highmagHighValue")
d5<-dgamble
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=T
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(60,90))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(50,80))
totalRTPlot(d5,line=F,title="lowmaghighvalue")
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=T
summaryOddsCond='lowp'
d5<-dgamble
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40))
d5<-dgamble
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=T
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,eb='sem',ylimit=c(10,40))
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=T
summaryOddsCond='midp'
d5<-dgamble
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,50))
totalRTPlot(d5,line=F,title="lowmagmidvalue")
d5<-dgamble
summaryMagFilter=T
summaryMagCond='low'
summaryOddsFilter=T
summaryOddsCond='lowp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
totalRTPlot(d5,line=F,title="lowmagmidvalue")
totalRTPlot(d5,line=F,title="lowmaglowvalue")
fail1
fail2
fail3
fail4
View(bonusAmounts)
write.table(bonusAmounts, "c:/bonusAmounts12.13.txt", sep="\t")
View(bonusAmounts)
bonus Amounts
bonusAmounts
