gambleRTs<-dgamble$gambleRT[dgamble$gambleRT!=0]
hist(gambleRTs,main=paste("Aggregated gamble RTs; ",toString(sum(dBehavioral$gambleCount)),"trials gambled"),breaks=70)
c("Numberof trials that they gambled on: ",toString(sum(dBehavioral$gambleCount)))
#Whenever they claimed guaranteed reward
outcomeRTs<-d$outcomeRT[d$outcomeRT!=0]
hist(outcomeRTs,main=paste("Aggregated outcome RTs; ",toString(length(outcomeRTs)),"trials accepted sure thing"),breaks=70)
c("Number of trials that they accepted sur thing: ",length(outcomeRTs))
#Number of trials per participant
dTrials<-d %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/ntrials*100))
#dTrials
hist(dTrials$ntrials,breaks=50,xlim=c(0,140),main=paste("Number of trials per participant; ",nParticipants,"participants"),xlab="Number of Trials per participant")
#Statistics
#Logistic regression models to predict gambled
#Need to figure out which one to use
mlog<-glm(gambled~contOdds,
data=dgamblelate,family="binomial");
summary(mlog)
mlog2<-glm(gambled~gambleDelay+oddsCond+interest,
data=dgamble,family="binomial");
summary(mlog2)
d5gambleearly$contOdds<-recode(d5gambleearly$oddsCond,lowp=1,midp=2,highp=3)
d5gamblemid$contOdds<-recode(d5gamblemid$oddsCond,lowp=1,midp=2,highp=3)
d5gamblelate$contOdds<-recode(d5gamblelate$oddsCond,lowp=1,midp=2,highp=3)
dgambleearly$contOdds<-recode(dgambleearly$oddsCond,lowp=1,midp=2,highp=3)
dgamblemid$contOdds<-recode(dgamblemid$oddsCond,lowp=1,midp=2,highp=3)
dgamblelate$contOdds<-recode(dgamblelate$oddsCond,lowp=1,midp=2,highp=3)
d5gambleearly<-filter(d5gamble,gambleDelay<2.5)
d5gamblemid<-filter(d5gamble,gambleDelay>2.5&gambleDelay<5)
d5gamblelate<-filter(d5gamble,gambleDelay>5)
dgambleearly<-filter(dgamble,gambleDelay<2.5)
dgamblemid<-filter(dgamble,gambleDelay>2.5&gambleDelay<5)
dgamblelate<-filter(dgamble,gambleDelay>5)
d5success<-filter(d5,Trialid==75)
gamblePlot(d5success,orig=T,title="shouldGamble")
rtPlot(d5success,type='raw',eb='stderr',ylimit=c(400,1000),title="ShouldGamble")
library(lme4)
# dgamble[,'oddsCondf'] <- as.factor(dgamble[,'oddsCond'])
#  mlmerog<-glmer(gambled~scale(gambleDelay)+oddsCondf+(scale(gambleDelay)+oddsCondf|uniqueid),
#           data=dgamble,family="binomial");
#  summary(mlmerog)
# d5primegamble[,'oddsCondf'] <- as.factor(d5primegamble[,'oddsCond'])
# d5primegamble[,'gamblePrevTrialf'] <- as.factor(d5primegamble[,'gamblePrevTrial'])
# mlogfc<-glm(gambled~gambleDelay+oddsCondf+gamblePrevTrial,
#               data=d5primegamble,family="binomial");
# summary(mlogfc)
##Total data
c("Number of trials that they gambled on: ",length(dgamble$response[dgamble$response=='gamble']))
c("Number of trials that they had the chance to gamble on: ",length(dgamble$response))
#By GambleDelay
d2<-filter(d,gambleDelay!=0) %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(gambleRT))
d2$seconds<-d2$binsTime
d2=filter(d2,binsTime!=0)
d2
d2p<-filter(d,gambleDelay!=0) %>%
group_by(binsTime,uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
semRT=sd(setdiff(gambleRT,0))/sqrt(length(setdiff(gambleRT,0))))
d2p$seconds<-d2p$binsTime
d2p=filter(d2p,binsTime!=0)
head(d2p)
d2prime<-d2p %>%
group_by(uniqueid) %>%
summarise(subjAverage=mean(percentageGambled))
grandmean=mean(d2p$percentageGambled)
head(d2p)
#Interesting plot of gambleDelay vs propensity to gamble. NEED TO ADD SDS HERE
#Andrew1
plot(d2$seconds,d2$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Total group data; Gamble propensity; n =",toString(sum(d2$trials)),
"trials;",toString(length(Participants)),"participants"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
abline(lm(d2$percentageGambled~d2$seconds))
#Plotting gamble RTs with sd
dRT<-filter(dgamble,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=std.error(gambleRT),
medianSpeed=median(NgambleRT),
sdSpeed=sd(NgambleRT),
medianRTz=median(gambleRTz),
sdRTz=sd(gambleRTz))
dRT$seconds<-dRT$binsTime
summary(m2RT<-glm(dRT$medianRT~dRT$binsTime))
#This is raw RT
plot(dRT$seconds,dRT$medianRT,xlim = c(0,8),ylim=c(650,800),main=paste("Group data; total data; median RT with sd; n =",toString(sum(d2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,2]+(as.numeric(dRT[i,3]))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,2]-(as.numeric(dRT[i,3]))),length=0.05, angle=90, code=3)
}
rtPlot(d,type="raw",eb='stderr',ylimit=c(600,900))
#This is Speed
plot(dRT$seconds,dRT$medianSpeed,xlim = c(0,8),main=paste("Group data; total data; median Speed with sd; n =",toString(sum(d2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']+(as.numeric(dRT[i,'sdSpeed']))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']-(as.numeric(dRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
}
rtPlot(d,type="raw",eb='stderr',ylimit=c(600,900))
#Formatting to get subj mean and grand mean and making new df d2poster that does the calculation (very elegant)
d2p$binsTime<-as.factor(d2p$binsTime)
d2poster<-d2p
for(i in 1:nrow(d2p)){
d2poster[i,"percentageGambled"]$percentageGambled=(d2poster[i,"percentageGambled"]$percentageGambled-d2prime[which(d2prime$uniqueid==d2p[i,"uniqueid"]$uniqueid),"subjAverage"]$subjAverage+grandmean)
}
#Making poster graphs of total gamble delay and RT with confidence bands
#POSTER1
#violin plot
# p1<-ggplot(d2poster,aes(binsTime,percentageGambled))+geom_violin(data=d2poster)
# p1
#Scatterplot with error bars
#
# pGD<-ggplot(d2p,aes(seconds,percentageGambled))+stat_summary(geom="point",fun.y=mean)+
#   stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
#   xlim(1,7.5)+xlab("Seconds into trial")+
#   ggtitle("Total group data; Gamble Propensity; n = 13654 trials; 121 participants")+ylab("Mean Gamble propensity")+
#   theme(plot.title = element_text(hjust = 0.5,face="bold",size=14))+
#   geom_smooth(method='lm',se=FALSE,color='black',size=.4)+
#   theme(axis.title.y = element_text(margin=unit(c(0,4,0,0),"mm")),panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank())
# pGD
#
plot(d2$seconds,d2$percentageGambled,xlim = c(0,7.5),ylim = c(35,50),
main=paste("Propensity to gamble vs. gamble interruption time"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19,bty='l')
abline(lm(d2$percentageGambled~d2$seconds))
summary(lm(d2$percentageGambled~d2$seconds))
subj<-unique(d$uniqueid)
intN<-NULL
botN<-NULL
rtn<-NULL
oddsN<-NULL
oddsNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(oddsNtemp)[1]<-"OddsGamblingScore"
colnames(oddsNtemp)[2]<-"Participant"
magN<-NULL
magNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(magNtemp)[1]<-"MagGamblingScore"
colnames(magNtemp)[2]<-"Participant"
acf1<-NULL
acf2<-NULL
acf3<-NULL
acf4<-NULL
acf5<-NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
plotRT=FALSE
plotGD=FALSE
#Add in knobs for different sub categories (though this number is very small....)
#Participants is default (all participants)
#If you want to run sub groups, go to bottom of script
for(i in Participants){
print(i)
dsub<-d[d$uniqueid==i,]
dsubgambled<-filter(dsub,response=="gamble")
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
oddsN=rbind(oddsN,oddsNtemp)
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
magN=rbind(magNtemp,magN)
#Breaking down subdf by gambleDelay
d4<-dsub[dsub$gambleDelay!=0,] %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (plotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(0,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (plotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is top check for gamble ramp
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
#This is glm for RT by gamble Delay
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This checks to see if any participant is gamble ramping
if(summary(mlogtemp)$coefficients[8]<.1 & summary(mlogtemp)$coefficients[2]>0){
intN<-c(intN,i)
}
#Check to see if any participant has a RT that's susupiciously low..
if(mean(setdiff(dsub$outcomeRT,0),na.rm=TRUE)<200){
botN<-c(botN,i)
}
#Check to see if participant has a downwards decreasing RT ramp
if(summary(mtempRT)$coefficients[8]<.1 & summary(mtempRT)$coefficients[2]<0){
rtn<-c(rtn,i)
}
#Making acf coefficient vectors
acf1<-c(acf1,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[2])
acf2<-c(acf2,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[3])
acf3<-c(acf3,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[4])
acf4<-c(acf4,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[5])
acf5<-c(acf5,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[6])
#Making df of gambleSlopes, rtSlopes, and i (who was just analyzed)
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
run<-c(run,i)
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
a<-oddsN[order(oddsN$OddsGamblingScore),]
#oddsN is the median split of people who respond well to odds
oddsN<-as.integer(a$Participant[(length(a$Participant)/2):length(a$Participant)])
#Quartile split
oddsN<-oddsN[(length(oddsN)/2):(length(oddsN))]
par(bty='n')
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#New way which is better
# d5prime<-dgamble[dgamble$uniqueid %in% rtn,]
# d5prime<-dgamble[dgamble$uniqueid %in% Participants,]
# d5prime<-dgamble[dgamble$uniqueid %in% intN,]
d5prime<-dgamble[dgamble$uniqueid %in% catchSuccessId,]
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,50))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,50))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60))
gamblePlot(d5prime,orig=T,eb='sem',ylimit=c(35,45))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,50))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,50))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d,orig=T,eb='sem',ylimit=c(45,55))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d5prime,orig=T,eb='sem',ylimit=c(35,50))
gamblePlot(d,orig=F,eb='sem',ylimit=c(40,55))
gamblePlot(d,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d,orig=F,eb='sem',ylimit=c(40,55))
gamblePlot(d,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,55))
gamblePlot(d5,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5prime,orig=F,eb='',ylimit=c(35,50))
gamblePlot(d5prime,orig=T,eb='sem',ylimit=c(35,50))
gamblePlot(d5prime,orig=F,eb='',ylimit=c(35,50))
gamblePlot(d,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5,orig=F,eb='',ylimit=c(40,55))
gamblePlot(d5prime,orig=F,eb='',ylimit=c(35,50))
gamblePlot(d,orig=F,eb='',ylimit=c(40,55),line=T)
gamblePlot(d5,orig=F,eb='',ylimit=c(40,55),line=T)
gamblePlot(d5prime,orig=F,eb='',ylimit=c(35,50),line=T)
rtPlot(d,type="raw",eb="stderr")
rtPlot(d5,type="raw",eb="stderr")
rtPlot(d5prime,type="raw",eb="stderr")
rtPlot(d,type="raw",eb="stderr")
rtPlot(d5,type="raw",eb="stderr")
rtPlot(d5prime,type="raw",eb="stderr")
rtPlot(d,type="raw",eb="stderr")
rtPlot(d5,type="raw",eb="stderr")
rtPlot(d5prime,type="raw",eb="stderr")
rtPlot(d,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d5,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d5,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800))
rtPlot(d,type="raw",eb="stderr",ylimit=c(600,800),title="All participants n=140")
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800),,title="successCatch n=53")
rtPlot(d5,type="raw",eb="stderr",ylimit=c(600,800),title="failCatch n=87")
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800),,title="successCatch n=53")
rtPlot(d,type="raw",eb="stderr",ylimit=c(600,800),title="All participants n=140")
rtPlot(d5,type="raw",eb="stderr",ylimit=c(600,800),title="failCatch n=87")
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800),,title="successCatch n=53")
rtPlot(d,type="raw",eb="stderr",ylimit=c(600,800),title="All participants n=140",line=T)
rtPlot(d5,type="raw",eb="stderr",ylimit=c(600,800),title="failCatch n=87",line=T)
rtPlot(d5prime,type="raw",eb="stderr",ylimit=c(600,800),,title="successCatch n=53",line=T)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5,response=='success')
rtsub<-filter(d5prime,response=='success')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,1300))
abline(v=median(rtall$outcomeRT),col="black",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5prime,response=='success')
rtsub<-filter(d5,response=='success')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,1300))
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="black",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
legend(700,300,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=16)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=16)
?legend
?pch
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=0)
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=0)
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
rtall<-filter(d,response=='gamble')
rtsub<-filter(d5,response=='gamble')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,1200))
hist(rtall$outcomeRT/1000,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,1200))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,1200))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,1300))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=50,xlim=c(0,1300))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=60,xlim=c(0,1300))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300))
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300))
abline(v=median(rtall$gambleRT),col="red",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
rtall<-filter(d5prime,response=='gamble')
rtsub<-filter(d5,response=='gamble')
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300))
abline(v=median(rtall$gambleRT),col="red",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=800)
abline(v=median(rtsub$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=80)
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=80)
rtall<-filter(d5,response=='gamble')
rtsub<-filter(d5prime,response=='gamble')
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=80)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,175))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=80)
rtall<-filter(d5,response=='gamble')
rtsub<-filter(d5prime,response=='gamble')
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(1,0,0,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=80)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
hist(rtsub$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=50)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(1,0,0,0.5), add=T,breaks=50)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5prime,response=='success')
rtsub<-filter(d5,response=='success')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(1,0,0,0.5), add=T,breaks=50)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
legend(900,200,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5prime,response=='success')
rtsub<-filter(d5,response=='success')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(1,0,0,0.5), add=T,breaks=50)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
legend(900,200,cex=.7, bty = "n",legend=c("Passed all the catch trials","Failed at least one catch trial"),col=c("red","blue"),title="",pch=15)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5,response=='success')
rtsub<-filter(d5prime,response=='success')
hist(rtall$outcomeRT,col=rgb(1,0,0,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="red",lwd=2)
hist(rtsub$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="blue",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Failed at least one catch trial","Passed all the catch trials"),col=c("red","blue"),title="",pch=15)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtall$outcomeRT,col=rgb(0,0,1,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="blue",lwd=2)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5,response=='success')
rtsub<-filter(d5prime,response=='success')
hist(rtall$outcomeRT,col=rgb(0,0,1,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="blue",lwd=2)
hist(rtsub$outcomeRT,col=rgb(1,0,0,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="red",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Failed at least one catch trial","Passed all the catch trials"),col=c("red","blue"),title="",pch=15)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(1,0,0,0.5), add=T,breaks=50)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5,response=='success')
rtsub<-filter(d5prime,response=='success')
hist(rtall$outcomeRT,col=rgb(0,0,1,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
#Overlaying RT histograms of d over d5 of sure thing and gamble
#d5 should be defined above
rtall<-filter(d5,response=='success')
rtsub<-filter(d5prime,response=='success')
hist(rtall$outcomeRT,col=rgb(0,0,1,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800))
abline(v=median(rtall$outcomeRT),col="blue",lwd=2)
hist(rtsub$outcomeRT,col=rgb(1,0,0,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="red",lwd=2)
hist(rtall$outcomeRT,col=rgb(0,0,1,0.5), main='Reaction Times when accepting sure thing', xlab='Reaction Time (ms)',breaks=40,xlim=c(0,800),ylim=c(0,350))
abline(v=median(rtall$outcomeRT),col="blue",lwd=2)
hist(rtsub$outcomeRT,col=rgb(1,0,0,0.5), add=T,breaks=40)
abline(v=median(rtsub$outcomeRT),col="red",lwd=2)
legend(600,350,cex=.7, bty = "n",legend=c("Failed at least one catch trial","Passed all the catch trials"),col=c("blue","red"),title="",pch=15)
t.test((1/rtall$outcomeRT),(1/rtsub$outcomeRT))
rtall<-filter(d5,response=='gamble',gambleRT!=0)
rtsub<-filter(d5prime,response=='gamble',gambleRT!=0)
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=50,xlim=c(0,1300),ylim=c(0,200))
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=55,xlim=c(0,1300),ylim=c(0,200))
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=55,xlim=c(0,1300),ylim=c(0,200))
hist(rtall$gambleRT,col=rgb(0,0,1,0.5), main='Reaction Times when gambling', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1300),ylim=c(0,200))
abline(v=median(rtall$gambleRT),col="blue",lwd=2)
hist(rtsub$gambleRT,col=rgb(1,0,0,0.5), add=T,breaks=50)
abline(v=median(rtsub$gambleRT),col="red",lwd=2)
legend(900,200,cex=.7, bty = "n",legend=c("Failed at least one catch trial","Passed all the catch trials"),col=c("blue","red"),title="",pch=15)
t.test((1/rtall$gambleRT),(1/rtsub$gambleRT))
#Where did gambles interrupt
hist(d$gambleDelay,breaks=50,xlim=c(0,8),main="When did gambles interrupt the progress bar?",xlab="Seconds into trial gamble appeared",col='black',ylab="Total number of trials",ylim=c(0,2000))
#Where did gambles interrupt
hist(d$gambleDelay,breaks=50,xlim=c(0,8),main="When did gambles interrupt the progress bar?",xlab="Seconds into trial gamble appeared",col='black',ylab="Total number of trials",ylim=c(0,2500))
