#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in fail3){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
fail3df<-subslope2DF
#Subgroup 2
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in fail4){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
fail4df<-subslope2DF
#Subgroup 2
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in fail5){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
fail5df<-subslope2DF
subslope2DF
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Infrequent Gamblers n=23 with ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='teal',pch=18)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='grey',pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='grey',pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='grey',pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='grey',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='yellow',pch=18)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='neon',pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='maroon',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
legend(5,70)
legend(5,70,legend=c("1","2","3","4","5"))
legend(5,70,legend=c("1","2","3","4","5"),col="blue","green","maroon","orange","red")
legend(5,70,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"))
legend(1,70,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"))
legend(1,50,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"))
legend(.6,50,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"))
legend(.7,20,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"))
legend(.8,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed")
legend(.6,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed")
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed")
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='maroon',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed")
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed",pch=18])
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed",pch=18)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='maroon',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
#Subgroup 2
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in fail2){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Adding colors to overall plot of gambleSlopes (only 1 of the two subgroups)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='All Participants n=88 with ',xlim=c(-1,1),ylim=c(-90,50))
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='maroon',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed",pch=18)
#Adding colors to overall plot of gambleSlopes (only 1 of the two subgroups)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='All Participants n=88 with ',xlim=c(-1,1),ylim=c(-90,50))
par(new=TRUE)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='Gamble slopes of failCatch subgroup ',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
#Adding colors to overall plot of gambleSlopes (only 1 of the two subgroups)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='All Participants n=88 with failCatch highlighted',xlim=c(-1,1),ylim=c(-90,50))
par(new=TRUE)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='blue',pch=18)
par(new=TRUE)
plot(subslope2DF$rtSlopes~subslope2DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=18)
par(new=TRUE)
plot(fail3df$rtSlopes~fail3df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='maroon',pch=18)
par(new=TRUE)
plot(fail4df$rtSlopes~fail4df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='orange',pch=18)
par(new=TRUE)
plot(fail5df$rtSlopes~fail5df$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='red',pch=18)
legend(.5,40,legend=c("1","2","3","4","5"),col=c("blue","green","maroon","orange","red"),title="Number of catch Trials failed",pch=18)
