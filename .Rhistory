MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in Participants){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
#Subgroup 2
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
gambleMeans<-NULL
subslope2DF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-TRUE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'low'
#Subgroup 2
for(i in Participants){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
subslope2DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#Making vectors for barplots of gambleSlopes and RTslopes
if(oddsFilter & subOddsCond=='lowp'){
lowvaluegambleslopes<-subslope2DF$gambleSlopes
lowvaluertslopes<-subslope2DF$rtSlopes
lowvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='midp'){
midvaluegambleslopes<-subslope2DF$gambleSlopes
midvaluertslopes<-subslope2DF$rtSlopes
midvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(oddsFilter & subOddsCond=='highp'){
highvaluegambleslopes<-subslope2DF$gambleSlopes
highvaluertslopes<-subslope2DF$rtSlopes
highvaluegamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='low'){
lowmaggambleslopes<-subslope2DF$gambleSlopes
lowmagrtslopes<-subslope2DF$rtSlopes
lowmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='mid'){
midmaggambleslopes<-subslope2DF$gambleSlopes
midmagrtslopes<-subslope2DF$rtSlopes
midmaggamblepropensity<-subslope2DF$gambleMeans
}else if(MagFilter & subMagCond=='high'){
highmaggambleslopes<-subslope2DF$gambleSlopes
highmagrtslopes<-subslope2DF$rtSlopes
highmaggamblepropensity<-subslope2DF$gambleMeans
}else if (MagFilter==FALSE & oddsFilter==FALSE){
totalgambleslopes<-subslope2DF$gambleSlopes
totalrtslopes<-subslope2DF$rtSlopes
totalgamblepropensity<-subslope2DF$gambleMeans
}else {
disp("error????")
}
#Gamble propensity does though - Value
valueMeans<-c(mean(lowmaggamblepropensity),mean(midmaggamblepropensity),mean(highmaggamblepropensity))
pg3<-barplot(valueMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col="black")
valueSds<-c((sd(lowmaggamblepropensity)),(sd(midmaggamblepropensity)),(sd(highmaggamblepropensity)))
arrows(pg3,valueMeans-valueSds,pg3,valueMeans+valueSds,lwd=2,angle=90,code=3)
pg3<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col="grey")
#To do gamble propensity Value
#POSTER7
valueMeans<-c(mean(lowvaluegamblepropensity),mean(midvaluegamblepropensity),mean(highvaluegamblepropensity))
#Gamble propensity does though - Mag
magMeans<-c(mean(lowmaggamblepropensity),mean(midmaggamblepropensity),mean(highmaggamblepropensity))
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col="black")
magSds<-c((sd(lowmaggamblepropensity)),(sd(midmaggamblepropensity)),(sd(highmaggamblepropensity)))
arrows(pg3,magMeans-magSds,pg3,magMeans+magSds,lwd=2,angle=90,code=3)
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col="empty")
#Gamble propensity does though - Mag
bpCol<- rgb(0, 0, 255, max = 255, alpha = 125, names = "blue50")
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol)
magSems<-c((sd(lowmaggamblepropensity)/sqrt(length(lowmaggamblepropensity))),(sd(midmaggamblepropensity)/sqrt(length(midmaggamblepropensity))),(sd(highmaggamblepropensity)/sqrt(length(highmaggamblepropensity))))
magSds<-c((sd(lowmaggamblepropensity)),(sd(midmaggamblepropensity)),(sd(highmaggamblepropensity)))
arrows(pg3,magMeans-magSds,pg3,magMeans+magSds,lwd=2,angle=90,code=3)
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol, main="Effect of magnitude on Gamble propensity")
magSems<-c((sd(lowmaggamblepropensity)/sqrt(length(lowmaggamblepropensity))),(sd(midmaggamblepropensity)/sqrt(length(midmaggamblepropensity))),(sd(highmaggamblepropensity)/sqrt(length(highmaggamblepropensity))))
magSds<-c((sd(lowmaggamblepropensity)),(sd(midmaggamblepropensity)),(sd(highmaggamblepropensity)))
arrows(pg3,magMeans-magSds,pg3,magMeans+magSds,lwd=2,angle=90,code=3)
arrows(pg3,magMeans-magSems,pg3,magMeans+magSems,lwd=2,angle=90,code=3)
magMeans<-c(mean(lowmaggamblepropensity),mean(midmaggamblepropensity),mean(highmaggamblepropensity))
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol, main="Effect of magnitude on Gamble propensity")
magSds<-c((sd(lowmaggamblepropensity)),(sd(midmaggamblepropensity)),(sd(highmaggamblepropensity)))
arrows(pg3,magMeans-magSems,pg3,magMeans+magSems,lwd=2,angle=90,code=3)
pg3<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol, main="Effect of magnitude on Gamble propensity")
arrows(pg3,magMeans-magSds,pg3,magMeans+magSds,lwd=2,angle=90,code=3)
#To do gamble propensity Value
#POSTER7
valueMeans<-c(mean(lowvaluegamblepropensity),mean(midvaluegamblepropensity),mean(highvaluegamblepropensity))
valueMeans
pg7<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col="grey")
pg7<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col=myCol)
pg7<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol)
pg7<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol,main="Effect of value on Gamble propensity")
valueSems<-c((sd(lowvaluegamblepropensity)/sqrt(length(lowvaluegamblepropensity))),(sd(midvaluegamblepropensity)/sqrt(length(midvaluegamblepropensity))),(sd(highvaluegamblepropensity)/sqrt(length(highvaluegamblepropensity))))
valueSds<-c((sd(lowvaluegamblepropensity)),(sd(midvaluegamblepropensity)),(sd(highvaluegamblepropensity)))
arrows(pg7,valueMeans-valueSds,pg7,valueMeans+valueSds,lwd=2,angle=90,code=3)
valueSems<-c((sd(lowvaluegamblepropensity)/sqrt(length(lowvaluegamblepropensity))),(sd(midvaluegamblepropensity)/sqrt(length(midvaluegamblepropensity))),(sd(highvaluegamblepropensity)/sqrt(length(highvaluegamblepropensity))))
valueSems
pg7<-barplot(valueMeans,names.arg = c("Low value","Mid value","High value"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol,main="Effect of value on Gamble propensity")
arrows(pg7,valueMeans-valueSems,pg7,valueMeans+valueSems,lwd=2,angle=90,code=3)
pg6<-barplot(magMeans,names.arg = c("Low magnitude","Mid magnitude","High magnitude"),ylim=c(0,80),ylab="Gamble Propensity",col=bpCol, main="Effect of magnitude on Gamble propensity")
arrows(pg6,magMeans-magSds,pg6,magMeans+magSds,lwd=2,angle=90,code=3)
plot(d2$seconds,d2$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Propensity to gamble vs. when gamble interrupted progress bar"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
abline(lm(d2$percentageGambled~d2$seconds))
summary(lm(d2$percentageGambled~d2$seconds))
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+stat_summary(geom="errorbar",fun.data=mean_se)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT,main="RT vs. when gamble interrupted progress bar"))+stat_summary(geom="point",fun.y=mean)+stat_summary(geom="errorbar",fun.data=mean_se)
pRT
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Gamble slopes',ylab='RT Slopes',main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Gamble slopes',ylab='RT Slopes',main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Gamble slopes',ylab='RT Slopes',pch=16,cex=0.4,main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Gamble slopes',ylab='RT Slopes',pch=16,cex=0.8,main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes',ylab='Individual RT Slopes',pch=16,cex=0.8,main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Individual RT Slopes (ms change per 1 second gamble was introduced)',pch=16,cex=0.8,main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Individual RT Slopes (ms change per 1 second gamble was introduced)',pch=16,cex=0.8,main='All Participants; n=88'breaks=50)
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Individual RT Slopes (ms change per 1 second gamble was introduced)',pch=16,cex=0.8,main='All Participants; n=88',breaks=50)
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Individual RT Slopes (ms change per 1 second gamble was introduced)',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-.7,.7))
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-.7,.7))
t.test(slopeDF$gambleSlopes)
#TO do make plot of RT slopes histogram
#POSTER graph
#POSTER5
hist(slopeDF$rtSlopes,xlab='Individual RT Slopes (ms change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50)
t.test(slopeDF$gambleSlopes)
t.test(slopeDF$rtSlopes)
#TO do make plot of RT slopes histogram
#POSTER graph
#POSTER5
hist(slopeDF$rtSlopes,xlab='Individual RT Slopes (ms change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-100,100))
#TO do make plot of RT slopes histogram
#POSTER graph
#POSTER5
hist(slopeDF$rtSlopes,xlab='Individual RT Slopes (ms change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-125,125))
#TO do make plot of RT slopes histogram
#POSTER graph
#POSTER5
hist(slopeDF$rtSlopes,xlab='Individual RT Slopes (ms change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-150,150))
stat_summary(geom="errorbar",fun.data=mean_se)+ theme_bw()
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT)+stat_summary(geom="point",fun.y=mean)+
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT)+stat_summary(geom="point",fun.y=mean)+stat_summary(geom="errorbar",fun.data=mean_se)+ theme_bw()
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(600,900)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(650,850)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(700,850)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(725,825)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(725,835)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(725,825)
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(725,825)+xlab("Seconds into trial gamble interrupted")
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_bw()+
xlim(0,8)+ylim(725,825)+xlab("Seconds into trial gamble interrupted")+
ggtitle("RT vs. when gamble interrupted progress bar")+ylab("Median RT")
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_classic()+
xlim(0,8)+ylim(725,825)+xlab("Seconds into trial gamble interrupted")+
ggtitle("RT vs. when gamble interrupted progress bar")+ylab("Median RT")
pRT
#Making poster graph of RT of d2p with semRTs
#POSTER2
pRT<-ggplot(d2p,aes(seconds,medianRT))+stat_summary(geom="point",fun.y=mean)+
stat_summary(geom="errorbar",fun.data=mean_se)+theme_classic()+
xlim(0,8)+ylim(725,825)+xlab("Seconds into trial gamble interrupted")+
ggtitle("RT vs. when gamble interrupted progress bar")+ylab("Median RT")+
theme(plot.title = element_text(hjust = 0.5))
pRT
plot(d2$seconds,d2$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Propensity to gamble vs. when gamble interrupted progress bar"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Individual RT Slopes (ms change per 1 second gamble was introduced)',pch=16,cex=0.8,main='All Participants; n=88',xlim=c(-.7,.7),ylim=c(-80,50))
with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
m1<-lm(slopeDF$rtSlopes~slopeDF$gambleSlopes)
abline(m1)
cor(slopeDF$rtSlopes~slopeDF$gambleSlopes)
summary(m1)
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-.7,.7))
axis(1)
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty='n')
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',breaks=50,xlim=c(-.7,.7))
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',
breaks=50,xlim=c(-.7,.7),bty='n')
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty="n")
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',
breaks=50,xlim=c(-.7,.7),bty='n')
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty="n")
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',
breaks=50,xlim=c(-.7,.7),bty='n')
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty="1")
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty="7")
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',
breaks=50,xlim=c(-.7,.7),bty='n')
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change per 1 second gamble was introduced)',ylab='Frequency',pch=16,cex=0.8,main='All Participants; n=88',
breaks=50,xlim=c(-.7,.7),bty='7')
t.test(slopeDF$gambleSlopes)
