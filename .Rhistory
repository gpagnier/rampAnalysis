#  arrows(as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,2]+(as.numeric(dlowpRT[i,3]))),as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,2]-(as.numeric(dlowpRT[i,3]))),length=0.05, angle=90, code=3)
#}
#Speed
#Still need to figure out errorBars
#plot(dlowpRT$seconds,dlowpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Low odds; median Speed with sd; n =",toString(sum(dlowp2$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dlowpRT$seconds)){
#  arrows(as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,'medianSpeed']+(as.numeric(dlowpRT[i,'sdSpeed']))),as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,'medianSpeed']-(as.numeric(dlowpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
gamblePlot(dlowp,orig=T,ylimit=c(20,30),title='Low value')
rtPlot(dlowp,type='raw',eb='stderr',title="Low value")
##Mid odds
dmidp<-filter(dgamble,Trialid==1|Trialid==2|Trialid==3|Trialid==4|Trialid==5|Trialid==6)
c("Number of trials that they gambled on: ",length(dmidp$gambleRT[dmidp$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dmidp$gambleDelay))
#By uniqueId
dBehavioralMidp<-dmidp %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralMidp$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on mid odds gambles; n =",toString(sum(dBehavioralMidp$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dmidp$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT mid mag gambles; n =",toString(sum(dBehavioralMidp$gambleCount)),"gambled trials;",toString(length(dBehavioralMidp$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dmid2p<-dmidp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dmid2p$seconds<-dmid2p$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dmid2p$seconds,dmid2p$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Mid odds; Gamble propensity; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
gamblePlot(dmidp,orig=T,ylimit=c(35,50))
gamblePlot(dmidp,orig=F,eb='sem',ylimit=c(35,50))
#Plotting RTs with sd
dmidpRT<-filter(dmidp,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=median(NgambleRT),
sdSpeed=sd(NgambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
dmidpRT$seconds<-dmidpRT$binsTime
plot(dmidpRT$seconds,dmidpRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Mid odds; median RT with sd; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dmidpRT$seconds)){
#   arrows(as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,2]+(as.numeric(dmidpRT[i,3]))),as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,2]-(as.numeric(dmidpRT[i,3]))),length=0.05, angle=90, code=3)
# }
# #Speed
# #Still need to figure out errorBars
# plot(dmidpRT$seconds,dmidpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Mid odds; median Speed with sd; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dmidpRT$seconds)){
#   arrows(as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,'medianSpeed']+(as.numeric(dmidpRT[i,'sdSpeed']))),as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,'medianSpeed']-(as.numeric(dmidpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
# }
gamblePlot(dmidp,orig=T,ylimit=c(35,50),title='Mid value')
rtPlot(dmidp,type='raw',eb='stderr',title="Mid value")
##High odds
dhighp<-filter(dgamble,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
c("Number of trials that they gambled on: ",length(dhighp$gambleRT[dhighp$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dhighp$gambleDelay))
#By uniqueId
dBehavioralHighp<-dhighp %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralHighp$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on high odds gambles; n =",toString(sum(dBehavioralHighp$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dhighp$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT high odds gambles; n =",toString(sum(dBehavioralHighp$gambleCount)),"gambled trials;",toString(length(dBehavioralHighp$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dhigh2p<-dhighp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dhigh2p$seconds<-dhigh2p$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dhigh2p$seconds,dhigh2p$percentageGambled,xlim = c(0,8),ylim = c(60,75),
main=paste("High odds; Gamble propensity; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
gamblePlot(dhighp,orig=T,ylimit=c(60,75))
gamblePlot(dhighp,orig=F,eb='sem',ylimit=c(40,50))
#Plotting RTs with sd
dhighpRT<-filter(dhighp,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=median(NgambleRT),
sdSpeed=sd(NgambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
dhighpRT$seconds<-dhighpRT$binsTime
plot(dhighpRT$seconds,dhighpRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; High odds; median RT with sd; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
gamblePlot(dhighp,orig=T,ylimit=c(60,75),title='High value')
rtPlot(dhighp,type='raw',eb='stderr',title="High value")
# for(i in 1:length(dhighpRT$seconds)){
#   arrows(as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,2]+(as.numeric(dhighpRT[i,3]))),as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,2]-(as.numeric(dhighpRT[i,3]))),length=0.05, angle=90, code=3)
# }
# #Speed
# #Still need to figure out errorBars
# plot(dhighpRT$seconds,dhighpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; High odds; median Speed with sd; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dhighpRT$seconds)){
#   arrows(as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,'medianSpeed']+(as.numeric(dhighpRT[i,'sdSpeed']))),as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,'medianSpeed']-(as.numeric(dhighpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
# }
#####################################################################################
#RPE
#Change the 3 here to whatever you want to do and just rerun it; it's a lot simpler
drpe<-filter(dgamble,dgamble$rpe2<0)
c("Number of trials that they gambled on: ",length(drpe$gambleRT[drpe$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(drpe$gambleDelay))
#By uniqueId
dBehavioralRpe<-drpe %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralRpe$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low RPE gambles; n =",toString(sum(dBehavioralRpe$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(drpe$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT RPE mag gambles; n =",toString(sum(dBehavioralRpe$gambleCount)),"gambled trials;",toString(length(dBehavioralRpe$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
drpe2<-drpe %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
drpe2$seconds<-drpe2$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(drpe2$seconds,drpe2$percentageGambled,xlim = c(0,8),ylim = c(20,35),
main=paste("RPE mag; Gamble propensity; n =",toString(sum(drpe2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
gamblePlot(drpe,orig=F,eb='sem',title='RPE',ylimit=c(40,50))
#Plotting RTs with sd
drpeRT<-filter(drpe,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=median(NgambleRT),
sdSpeed=sd(NgambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
drpeRT$seconds<-drpeRT$binsTime
plot(drpeRT$seconds,drpeRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; RPE ; median RT with sd; n =",toString(sum(drpe2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(drpeRT$seconds)){
#  arrows(as.numeric(drpeRT$seconds[i]),as.numeric(drpeRT[i,'medianRT']+(as.numeric(drpeRT[i,'sdRT']))),as.numeric(drpeRT$seconds[i]),as.numeric(drpeRT[i,'medianRT']-(as.numeric(drpeRT[i,'sdRT']))),length=0.05, angle=90, code=3)
#}
#Speed
#Still need to figure out errorBars
#plot(drpeRT$seconds,drpeRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; RPE mag; median Speed with sd; n =",toString(sum(drpe2$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(drpeRT$seconds)){
#  arrows(as.numeric(drpeRT$seconds[i]),as.numeric(drpeRT[i,'medianSpeed']+(as.numeric(drpeRT[i,'sdSpeed']))),as.numeric(drpeRT$seconds[i]),as.numeric(drpeRT[i,'medianSpeed']-(as.numeric(drpeRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
gamblePlot(drpe,orig=T,ylimit=c(35,50),title='Low rpe')
rtPlot(drpe,type='raw',eb='stderr',title="Low rpe")
#####################################################################################################################################################################################################################################################################################################################
#####################################################################################################################################################################################################################################################################################################################
#####################################################################################################################################################################################################################################################################################################################
#####################################################################################################################################################################################################################################################################################################################
#############################################################################################
#Breaking down by participant
#Some definitions
lowMag<-c(1,2,21,22,31,32)
midMag<-c(3,4,23,24,33,34)
highMag<-c(5,6,25,26,35,36)
lowOdds<-c(1:6)
midOdds<-c(21:26)
highOdds<-c(31:36)
####The following is to just get one participant's data
#INDIVIDUAL
p=370
plotZscore<-FALSE
dsub<-d[d$uniqueid==p,]
dsubgambled<-filter(dsub,response=="gamble")
d3<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d3$seconds<-d3$binsTime
par(ps = 12, cex = 1, cex.main = 1)
plot(d3$seconds,d3$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data (all trials); n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled")
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
summary(mlogtemp)
#One participant RT
d3RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
d3RT$seconds<-d3RT$binsTime
plot(d3RT$seconds,d3RT$meanRT,xlim = c(0,8),ylim=c(200,1500),main=paste("All gambles; Reaction time with sd; n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(d3RT$seconds)){
arrows(as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]+(as.numeric(d3RT[i,3]))),as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]-(as.numeric(d3RT[i,3]))),length=0.05, angle=90, code=3)
}
if(plotZscore){
plot(d3RT$seconds,d3RT$meanRT,xlim = c(0,8),main=paste("All gambles; Reaction time with sd; n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(d3RT$seconds)){
arrows(as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]+(as.numeric(d3RT[i,3]))),as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]-(as.numeric(d3RT[i,3]))),length=0.05, angle=90, code=3)
}
}
msubRT<-lm(dsubgambled$gambleRT~dsubgambled$gambleDelay)
abline(msubRT)
summary(msubRT)
#Gamble slope for participant p
summary(mlogtemp)$coefficients[2]
#RT slope for participant p
msubRT$coefficients[2]
#############################################################################################
#############################################################################################
#############################################################################################
#############################################################################################
#############################################################################################
#############################################################################################
#Looping through  all participants data at an indiv. level to extract useful
subj<-unique(d$uniqueid)
intN<-NULL
botN<-NULL
rtn<-NULL
oddsN<-NULL
oddsNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(oddsNtemp)[1]<-"OddsGamblingScore"
colnames(oddsNtemp)[2]<-"Participant"
magN<-NULL
magNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(magNtemp)[1]<-"MagGamblingScore"
colnames(magNtemp)[2]<-"Participant"
acf1<-NULL
acf2<-NULL
acf3<-NULL
acf4<-NULL
acf5<-NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
plotRT=FALSE
plotGD=FALSE
#Add in knobs for different sub categories (though this number is very small....)
#Participants is default (all participants)
#If you want to run sub groups, go to bottom of script
for(i in Participants){
print(i)
dsub<-d[d$uniqueid==i,]
dsubgambled<-filter(dsub,response=="gamble")
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
oddsN=rbind(oddsN,oddsNtemp)
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
magN=rbind(magNtemp,magN)
#Breaking down subdf by gambleDelay
d4<-dsub[dsub$gambleDelay!=0,] %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (plotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(0,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (plotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is top check for gamble ramp
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
#This is glm for RT by gamble Delay
mtempRT<-lm(d4RT$medianRT~d4RT$seconds)
#This checks to see if any participant is gamble ramping
if(summary(mlogtemp)$coefficients[8]<.1 & summary(mlogtemp)$coefficients[2]>0){
intN<-c(intN,i)
}
#Check to see if any participant has a RT that's susupiciously low..
if(mean(setdiff(dsub$outcomeRT,0),na.rm=TRUE)<200){
botN<-c(botN,i)
}
#Check to see if participant has a downwards decreasing RT ramp
if(summary(mtempRT)$coefficients[8]<.1 & summary(mtempRT)$coefficients[2]<0){
rtn<-c(rtn,i)
}
#Making acf coefficient vectors
acf1<-c(acf1,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[2])
acf2<-c(acf2,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[3])
acf3<-c(acf3,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[4])
acf4<-c(acf4,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[5])
acf5<-c(acf5,acf(dsub$gambled,lag.max=5,plot = FALSE)$acf[6])
#Making df of gambleSlopes, rtSlopes, and i (who was just analyzed)
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
run<-c(run,i)
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
a<-oddsN[order(oddsN$OddsGamblingScore),]
#oddsN is the median split of people who respond well to odds
oddsN<-as.integer(a$Participant[(length(a$Participant)/2):length(a$Participant)])
#Quartile split
oddsN<-oddsN[(length(oddsN)/2):(length(oddsN))]
#Plot of gamble slopes vs. rtSlopes
#POSTER graph
#POSTER3
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change/second)',ylab='Individual RT Slopes (ms/second)',pch=16,cex=0.8,main='Gamble slopes vs. RT slopes; n=141',xlim=c(-.7,.7),ylim=c(-80,50),bty='7')
abline(v=0,col="black")
abline(h=0,col="black")
#with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
m1<-lm(slopeDF$rtSlopes~slopeDF$gambleSlopes)
#Make ggExtrav(ggMarginal)
#Andrew3
ap3<-ggplot(slopeDF,aes(gambleSlopes,rtSlopes))+geom_point()+theme_bw()+ theme(
plot.background = element_blank()
,panel.grid.major = element_blank()
,panel.grid.minor = element_blank())+
geom_hline(yintercept = 0)+geom_vline(xintercept=0)+
labs(y="RT Slopes",x="Gamble Slopes")+xlim(-.75,.75)+ylim(-110,110)
ggExtra::ggMarginal(ap3,type='density')
abline(m1)
cor(slopeDF$rtSlopes~slopeDF$gambleSlopes)
summary(m1)
#TO do make plot of gamble slopes histogram
#POSTER graph
#POSTER4
par(bty="7")
hist(slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change/second)',ylab='Frequency',pch=16,cex=0.8,main='Individual Gamble slopes; n=88',
breaks=50,xlim=c(-.7,.7),bty='7',col='black')
abline(v=0,col="blue")
t.test(slopeDF$gambleSlopes)
#TO do make plot of RT slopes histogram
#POSTER graph
#POSTER5
hist(slopeDF$rtSlopes,xlab='Individual RT Slopes (ms/seconds)',ylab='Frequency',pch=16,cex=0.8,main='Individual RT slopes; n=88',breaks=50,xlim=c(-150,150),col='black')
abline(v=0,col="blue")
t.test(slopeDF$rtSlopes)
summaryMagFilter=FALSE
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='midp'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
length(failCatchId)
length(unique(d$uniqueid))
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
summaryMagFilter=T
summaryMagCond='low'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
gamblePlot(d5,orig=T,ylimit=c(0,100),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(40,60),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
summaryMagFilter=T
summaryMagCond='mid'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
summaryMagFilter=T
summaryMagCond='high'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='lowp'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(0,100),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(25,40),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=T
summaryOddsCond='midp'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(25,40),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(5,80),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
summaryOddsFilter=T
summaryOddsCond='highp'
d5<-dgamble[dgamble$uniqueid %in% failCatchId,]
gamblePlot(d5,orig=T,ylimit=c(50,90),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(45,60),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
gamblePlot(d5,orig=T,ylimit=c(40,55),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(0,95),title='failCatch')
gamblePlot(d5,orig=T,ylimit=c(55,75),title='failCatch')
rtPlot(d5,type='raw',eb='stderr',title="failCatch")
acf(dsub$gambled,lag.max=5)
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(nrow(dgamble[dgamble$gambleDelay!=0,]))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled")
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(nrow(dgamble[dgamble$gambleDelay!=0,]))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled",col='blue',alpha=.5)
#How much did each participant choose to gamble
hist(dBehavioralLow$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioralLow$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
par(new=T)
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(nrow(dgamble[dgamble$gambleDelay!=0,]))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled",col='blue')
#How much did each participant choose to gamble
hist(ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioralLow$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
#How much did each participant choose to gamble
hist(0,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioralLow$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
#minute
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(nrow(dgamble[dgamble$gambleDelay!=0,]))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled",col='red')
par(new=T)
#How much did each participant choose to gamble
hist(dBehavioralLow$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioralLow$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='blue')
