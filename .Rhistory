}
d2<-rbind(d2,dsub)
}
d<-d2
#Now this is refined number of participants
nParticipants<- length(unique(d$uniqueid))
Participants<-unique(d$uniqueid)
nParticipants
Participants
nParticipants
Participants
#Behavioral analyses
dgamble<-filter(d,gambleDelay!=0,oddsCond!="catch")
dBehavioral<-dgamble %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
ignoredTrials=sum(ignoreRT!=0),
successTrials=sum(response=="success"),
percentageGambled=round(gambleCount/trials*100),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'))
dBehavioral
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(nrow(dgamble[dgamble$gambleDelay!=0,]))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled",col='red')
boxplot(dBehavioral$percentageGambled,ylim=c(0,100),main=paste("Distribution of gambling percentages across everyone; mean G % = ",toString(mean(dBehavioral$percentageGambled))),ylab="Percentage gambled (per participant)")
#Adding propensity to gamble and propensity to press as possible predictors
d$basePercentageGambled<-NULL
d2=d[0,]
#Adding d column of number of failed trials
for (i in Participants){
dsub<-filter(d,uniqueid==i)
tempdb<-filter(dBehavioral,uniqueid==i)
dsub$basePercentageGambled<-tempdb$percentageGambled
d2<-rbind(d2,dsub)
}
d<-d2
#Remaking behavioral histograms
#Whenever they ignored -RTIgnore
ignoreRTs<-dgamble$ignoreRT[dgamble$ignoreRT!=0]
hist(ignoreRTs,main=paste("Aggregated ignore RTs; ",toString(sum(dBehavioral$ignoredTrials)),"trials ignored"),breaks=90,xlim=c(0,1700))
#Whenever they gambled -RTGamble
gambleRTs<-dgamble$gambleRT[dgamble$gambleRT!=0]
hist(gambleRTs,main=paste("Aggregated gamble RTs; ",toString(sum(dBehavioral$gambleCount)),"trials gambled"),breaks=110,xlim=c(0,1700))
#Whenever they  ignored and claimed guaranteed reward
outcomeRTs<-dgamble$outcomeRT[dgamble$outcomeRT!=0]
hist(outcomeRTs,main=paste("Aggregated outcome RTs; ",toString(length(outcomeRTs)),"trials accepted sure thing"),breaks=150,xlim=c(0,700))
#Histogram of RTs and t test
hist(ignoreRTs,col=rgb(0,0,1,0.5), main='Reaction Times at gamble time', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1500))
abline(v=median(ignoreRTs),col="blue",lwd=2)
hist(gambleRTs,col=rgb(1,0,0,0.5), add=T,breaks=70)
abline(v=median(gambleRTs),col="red",lwd=2)
legend(200,15,cex=.7, bty = "n",legend=c("IgnoreRTs","GambleRTs"),col=c("blue","red"),title="",pch=15)
t.test((1/ignoreRTs),(1/gambleRTs))
#Number of gambled trials per participant
dTrials<-dgamble %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
ignoredTrials=sum(ignoreRT!=0),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
percentageIgnored=round(ignoredTrials/ntrials*100))
head(dTrials)
#dTrials
hist(dTrials$ntrials,breaks=50,xlim=c(0,140),main=paste("Number of trials per participant; ",nParticipants,"participants"),xlab="Number of Trials per participant")
#Looking at trialType breakdown
dtrialType<-dgamble %>%
group_by(binsTime,trialType) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
ignoredTrials=sum(ignoreRT!=0),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
percentageIgnored=round(ignoredTrials/ntrials*100))
head(dtrialType)
#Statistics
#Resetting dgamble
dgamble<-filter(d,gambleDelay!=0,Trialid!=75,Trialid!=86)
#Logistic regression models to predict gambled
#Recoding
dgamble$contOdds<-recode(dgamble$oddsCond,lowp=1,midp=2,highp=3)
dgamble$contMag<-recode(dgamble$magCond,low=1,mid=2,high=3)
unique(d$trialNumber)
colnames(d)
unique(d$oddsCond)
db<-filter(d,oddsCond=='lowp'|'highp')
db<-filter(d,oddsCond='lowp'|'highp')
db<-filter(d,oddsCond==lowp|highp)
db<-filter(d,oddsCond=='lowp'|oddsCond=='highp')
unique(db$oddsCond)
unique(d$binsTime)
data=d
interruption=late
interruption<-late
interruption<'late'
interruption<_'late'
interruption<-'late'
if(interruption=='early'){
data=filter(data,binsTime==2)
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
}else if(interruption=='late'){
data=filter(data,binsTime==6)
}
unique(data$binsTime)
dat=d
data=d
138/3
47+46
93+46
time='late'
if(time=='early'){
data=filter(data,trialNumber==1:45)
}else if(time=='mid'){
data=filter(data,trialNumber==46:92)
}else if(time=='late'){
data=filter(data,trialNumber==93:138)
}
if(time=='early'){
data=filter(data,trialNumber==c(1:45))
}else if(time=='mid'){
data=filter(data,trialNumber==c(46:92))
}else if(time=='late'){
data=filter(data,trialNumber==c(93:138))
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
time='mid'
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
data=d
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
unique(data$trialNumber)
data=d
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datalow<-filter(data,oddsCond=='highp'&gambleRT!=0)
View(datalow)
interruption='mid'
time=''
if(interruption=='early'){
data=filter(data,binsTime==2)
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
}else if(interruption=='late'){
data=filter(data,binsTime==6)
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
unique(datalow$binsTime)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=xlimit,main=paste("RT on correct responses; n =",toString(length(correctResp)),"gamble interrupted: ",toString(interruption),xlab="RT (ms)",col='red')
}
hist(correctResp,breaks=50,xlim=xlimit,main=paste("RT on correct responses; n =",toString(length(correctResp)),"gamble interrupted: ",toString(interruption)),xlab="RT (ms)",col='red')
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),"gamble interrupted: ",toString(interruption)),xlab="RT (ms)",col='red')
correctRThist<-function(data,interruption='',time='',xlimit=c(0,1500),title=""){
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),"gamble interrupted: ",toString(interruption)),xlab="RT (ms)",col=color)
}
#Histograms to check for spacing out
correctRThist(interruption="early")
#Histograms to check for spacing out
correctRThist(d,interruption="early")
correctRThist<-function(data,interruption='',time='',xlimit=c(0,1500)){
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),"gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
}
#Histograms to check for spacing out
correctRThist(d,interruption="early")
correctRThist(d,interruption="mid")
correctRThist(d,interruption="late")
correctRThist<-function(data,interruption='',time='',xlimit=c(0,1500)){
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
}
#Histograms to check for spacing out
correctRThist(d,interruption="early")
correctRThist(d,interruption="mid")
correctRThist(d,interruption="late")
#Histogram of RTs and t test
hist(dhigh$ignoreRT[dhigh$ignoreRT!=0],col=rgb(0,0,1,0.5), main='Reaction Times at gamble time high mag only', xlab='Reaction Time (ms)',breaks=70,xlim=c(0,1500))
abline(v=median(ignoreRTs),col="blue",lwd=2)
#Histograms to check for spacing out
correctRThist(d,interruption="early")
#Histograms to check for spacing out
correctRThist(d,interruption="early")
par(new=T)
correctRThist(d,interruption="mid")
par(new=T)
correctRThist(d,interruption="late")
correctRThist<-function(data,interruption='',time='',line=T,xlimit=c(0,1500)){
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
if(line=T){
abline(v=median(correctResp),col=color,lwd=2)
}
}
correctRThist<-function(data,interruption='',time='',line=T,xlimit=c(0,1500)){
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
if(line=T){
abline(v=median(correctResp),col=color,lwd=2)
}
}
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
data=d
interruption=''
time=''
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color)
if(line=T){
abline(v=median(correctResp),col=color,lwd=2)
}
if(line==T){
abline(v=median(correctResp),col=color,lwd=2)
}
if(line){
abline(v=median(correctResp),col=color,lwd=2)
}
line=F
if(line){
abline(v=median(correctResp),col=color,lwd=2)
}
addknob=T
addknob=True
addknob=TRUE
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color,add=addknob)
correctRThist<-function(data,interruption='',time='',line=T,xlimit=c(0,1500),addknob=FALSE){
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color='red'
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color='blue'
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption)),xlab="RT (ms)",col=color,add=addknob)
if(line){
abline(v=median(correctResp),col=color,lwd=2)
}
}
#Histograms to check for spacing out
correctRThist(d,interruption="early")
par(new=T)
correctRThist(d,interruption="mid",addknob=T)
correctRThist<-function(data,interruption='',time='',line=T,xlimit=c(0,1500),addknob=FALSE,title=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption))){
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color=rgb(0,0,1,0.5)
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color=rgb(1,0,0,0.5)
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color='green'
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=title,xlab="RT (ms)",col=color,add=addknob)
if(line){
abline(v=median(correctResp),col=color,lwd=2)
}
}
#Histograms to check for spacing out
correctRThist(d,interruption="early")
correctRThist(d,interruption="mid",addknob=T,title="early + MId")
correctRThist(d,interruption="mid",addknob=T,title="early + MId")
#Histograms to check for spacing out
correctRThist(d,interruption="early",title="early + MId")
correctRThist(d,interruption="mid",addknob=T,)
correctRThist(d,interruption="late",addknob=T,)
correctRThist<-function(data,interruption='',time='',line=T,xlimit=c(0,1500),addknob=FALSE,title=paste("RT on correct responses; n =",toString(length(correctResp)),";","gamble interrupted:",toString(interruption))){
color='grey'
if(interruption=='early'){
data=filter(data,binsTime==2)
color=rgb(0,0,1,0.5)
}else if(interruption=='mid'){
data=filter(data,binsTime==4)
color=rgb(1,0,0,0.5)
}else if(interruption=='late'){
data=filter(data,binsTime==6)
color=rgb(0,1,0,0.5)
}
if(time=='early'){
data=filter(data,trialNumber<46)
}else if(time=='mid'){
data=filter(data,trialNumber>45&trialNumber<93)
}else if(time=='late'){
data=filter(data,trialNumber>93)
}
datalow<-filter(data,oddsCond=='lowp'&ignoreRT!=0)
datahigh<-filter(data,oddsCond=='highp'&gambleRT!=0)
correctResp<-c(datalow$ignoreRT,datahigh$gambleRT)
hist(correctResp,breaks=50,xlim=c(0,1500),main=title,xlab="RT (ms)",col=color,add=addknob)
if(line){
abline(v=median(correctResp),col=color,lwd=2)
}
}
#Histograms to check for spacing out
correctRThist(d,interruption="early",title="All corrrect responses")
correctRThist(d,interruption="mid",addknob=T,)
correctRThist(d,interruption="late",addknob=T,)
#Histograms to check for spacing out
correctRThist(d,interruption="early",title="All corrrect responses")
correctRThist(d,interruption="mid",addknob=T,)
correctRThist(d,interruption="late",addknob=T,)
legend(250,10,cex=.7, bty = "n",legend=c("early","mid","late"),col=c("blue","red","green"),title="",pch=15)
library(lme4)
mlmerog2<-glmer(gambled~scale(contOdds)+scale(gambleDelay)*scale(contOdds)+scale(basePercentageGambled):scale(gambleDelay)+
scale(gamblePrevTrial)+scale(contMag)+scale(contMag):scale(gambleDelay)+scale(failedTrials)+
scale(failedTrials):scale(gambleDelay)+as.factor(trialType)+scale(trialNumber)+scale(trialNumber):scale(gambleDelay)+
(scale(gambleDelay)+scale(contMag)+scale(trialNumber)+scale(trialNumber):scale(gambleDelay)+
scale(contOdds)+1|uniqueid),
data=dgamble,family="binomial");
summary(mlmerog2)
a<-c(1:10)
b<-c(5:15)
c<-c(3:13)
anova(a,b,c)
#Histograms to check for spacing out
correctRThist(d,interruption="early",title="All corrrect responses")
correctRThist(d,interruption="mid",addknob=T,)
#Histograms to check for spacing out
correctRThist(d,interruption="early",title="All corrrect responses, early mid and late")
correctRThist(d,interruption="mid",addknob=T,)
correctRThist(d,interruption="late",addknob=T,)
legend(250,10,cex=.7, bty = "n",legend=c("early","mid","late"),col=c("blue","red","green"),title="",pch=15)
correctRThist(d,interruption="early",title="All corrrect responses, early and late")
correctRThist(d,interruption="late",addknob=T,)
legend(250,10,cex=.7, bty = "n",legend=c("early","late"),col=c("blue","green"),title="",pch=15)
