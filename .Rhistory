didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(dsubignored$ignoreRT~dsubignored$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
ra<-ra[-5]
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
subslope1DF<-NULL
gambleMeans<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
#Subgroup 1
for(i in ra){
print(i)
dsub<-filter(d,uniqueid==i)
dsubignored<-filter(dsub,response=="success",gambleDelay!=0)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(dsubignored$ignoreRT~dsubignored$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
#histograms of slopes
subslope1DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#sfn3
#Subplot dot plot
#Adding colors to overall plot of gambleSlopes (only 1 of the two subgroups)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='All Participants gambleSlopes vs. rtSlopes',xlim=c(-1,1),ylim=c(-90,50),pch=16,col='red')
abline(v=0,col='black')
abline(h=0,col='black')
par(new=TRUE)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=16)
legend(.5,55,cex=.7, bty = "n",legend=c("All Participants","RiskAverse"),col=c("red","green"),title="",pch=16)
imp
imp<-imp[-5]
imp
imp<-imp[-10]
-failCatchId
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
subslope1DF<-NULL
gambleMeans<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
#Subgroup 1
for(i in imp){
print(i)
dsub<-filter(d,uniqueid==i)
dsubignored<-filter(dsub,response=="success",gambleDelay!=0)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(dsubignored$ignoreRT~dsubignored$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
which(imp==583)
imp<-imp[-31]
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
subslope1DF<-NULL
gambleMeans<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
#Subgroup 1
for(i in imp){
print(i)
dsub<-filter(d,uniqueid==i)
dsubignored<-filter(dsub,response=="success",gambleDelay!=0)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(dsubignored$ignoreRT~dsubignored$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
which(imp==594)
imp<-imp[-35]
subplotRT=FALSE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
subslope1DF<-NULL
gambleMeans<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
#Subgroup 1
for(i in imp){
print(i)
dsub<-filter(d,uniqueid==i)
dsubignored<-filter(dsub,response=="success",gambleDelay!=0)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,ignoreRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=median(ignoreRT),
sdRT=sd(ignoreRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(dsubignored$ignoreRT~dsubignored$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
#This is just one number to see how much overall they gambled
gambleMeans=c(gambleMeans,mean(d4$percentageGambled))
}
}
#histograms of slopes
subslope1DF<-data.frame(cbind(run,rtSlopes,gambleSlopes,gambleMeans))
#sfn3
#Subplot dot plot
#Adding colors to overall plot of gambleSlopes (only 1 of the two subgroups)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main='All Participants gambleSlopes vs. rtSlopes',xlim=c(-1,1),ylim=c(-90,50),pch=16,col='red')
abline(v=0,col='black')
abline(h=0,col='black')
par(new=TRUE)
plot(subslope1DF$rtSlopes~subslope1DF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',xlim=c(-1,1),ylim=c(-90,50),col='green',pch=16)
legend(.5,55,cex=.7, bty = "n",legend=c("All Participants","RiskSeeking"),col=c("red","green"),title="",pch=16)
bonusAmounts
