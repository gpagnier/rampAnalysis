arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,60),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; gambleInterruption all data")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
subj<-unique(d$uniqueid)
intN<-NULL
botN<-NULL
rtn<-NULL
oddsN<-NULL
oddsNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(oddsNtemp)[1]<-"OddsGamblingScore"
colnames(oddsNtemp)[2]<-"Participant"
magN<-NULL
magNtemp<-data.frame(matrix(NA, ncol = 2, nrow =1))
colnames(magNtemp)[1]<-"MagGamblingScore"
colnames(magNtemp)[2]<-"Participant"
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
EVdiffs<-NULL
plotRT=F
plotGD=F
#Participants is default (all participants)
#If you want to run sub groups, go to bottom of script
for(i in subj){
print(i)
dsub<-d[d$uniqueid==i,]
dsubgamble<-filter(dsub,gambleDelay!=0,Trialid!=75|86)
dsubgambled<-filter(dsub,gambleDelay!=0,Trialid!=75|86,gambleRT!=0)
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
oddsN=rbind(oddsN,oddsNtemp)
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
magN=rbind(magNtemp,magN)
#Breaking down subdf by gambleDelay
d4<-dsub[dsub$gambleDelay!=0,] %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (plotGD){
gamblePlot(dsub,line=T,title=paste("id#",toString(unique(dsub$uniqueid))," oddsScore: ",toString(oddsNtemp[1,1])))
# plot(d4$seconds,d4$percentageGambled,xlim = c(0,7),ylim = c(0,100),
#      main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
#      xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
if (plotRT){
totalRTPlot(dsub,line=T,title=paste("Indiv graph; Participant# ",toString(unique(dsub$uniqueid))))
}
#This is to check for gamble ramp
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0,Trialid!=75|86),family="binomial")
#This is glm for RT by gamble Delay
mtempRT<-lm(dsubgambled$gambleRT~dsubgambled$gambleDelay)
#This checks to see if any participant is gamble ramping
if(summary(mlogtemp)$coefficients[8]<.1 & summary(mlogtemp)$coefficients[2]>0){
intN<-c(intN,i)
}
#Check to see if any participant has a RT that's suspiciously low..
if(mean(setdiff(dsub$outcomeRT,0),na.rm=TRUE)<200){
botN<-c(botN,i)
}
#Check to see if participant has a downwards decreasing RT ramp
if(summary(mtempRT)$coefficients[8]<.1 & summary(mtempRT)$coefficients[2]<0){
rtn<-c(rtn,i)
}
#Making df of gambleSlopes, rtSlopes, and i (who was just analyzed)
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
EVdiffs<-c(EVdiffs,oddsScoreMean(dsub,int='early')-oddsScoreMean(dsub,int='late'))
run<-c(run,i)
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
a<-oddsN[order(oddsN$OddsGamblingScore),]
#oddsN is the median split of people who respond well to odds
oddsN<-as.integer(a$Participant[(length(a$Participant)/2):length(a$Participant)])
#illogical Gamblers
reverseOddsN<-as.integer(a[1:(nrow(a)/4),]$Participant)
par(bty='n')
box(which="plot",lty='solid')
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='Individual Gamble slopes (% change/second)',ylab='Individual RT Slopes (ms/second)',pch=16,cex=0.8,main=paste('Gamble slopes vs. RT slopes; n=',nrow(slopeDF)),xlim=c(-.7,.7),ylim=c(-80,50),bty='7')
abline(v=0,col="black")
abline(h=0,col="black")
#All data
gamblePlot(d,title="test",ylim=c(30,50))
gambleRtPlot(d,xlimit=c(0,5),ylimit=c(700,1000))
gambleRtPlot(d,xlimit=c(0,5),ylimit=c(700,950))
switchPlot(d,ylimit=c(150,300))
switchPlot(d,ylimit=c(150,700))
switchPlot<-function(data,line=FALSE,ylimit=c(300,700)){
#currently coded for 8 switches
index=1:8
switch1=NULL
switch2=NULL
switch3=NULL
switch4=NULL
switch5=NULL
switch6=NULL
switch7=NULL
switch8=NULL
for(i in 1:nrow(data)){
temp<-unlist(d[i,'switchTimes'])
if(mean(temp)>5000){
next()
}
switch1=c(switch1,temp[1])
switch2=c(switch2,temp[2])
switch3=c(switch3,temp[3])
switch4=c(switch4,temp[4])
switch5=c(switch5,temp[5])
switch6=c(switch6,temp[6])
switch7=c(switch7,temp[7])
switch8=c(switch8,temp[8])
}
points<-c(mean(switch1),mean(switch2),mean(switch3),mean(switch4),mean(switch5),mean(switch6),mean(switch7),mean(switch8))
std<-c(std.error(switch1),std.error(switch2),std.error(switch3),std.error(switch4),std.error(switch5),std.error(switch6),std.error(switch7),std.error(switch8))
plot(points,ylab="mean RT (ms)",main="RT when pushing progress bar forward",ylim=ylimit,pch=19)
#arrows(index,points-std,index,points+std,lwd=1,angle=90,code=3)
}
switchPlot(d,ylimit=c(150,700))
#Mag/odds condition
#Removing participants who gambled too much/not enough
#Low mag
dlow<-filter(d,magCond=='low',gambleDelay!=0,Trialid!=75,Trialid!=86)
dlowB<-dlow %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dlowB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall participant propensity(low mag only) to gamble; n =",toString(sum(dlowB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dlow,title="lowMag",ylim=c(0,50))
gambleRtPlot(dlow,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dlow$outcomeRT[dlow$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dlow$outcomeRT[dlow$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","lowMag only"),col=c("red","blue"),title="",pch=16)
#Mid mag
dmid<-filter(d,magCond=='mid',gambleDelay!=0,Trialid!=75,Trialid!=86)
dmidB<-dmid %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dmidB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(15,35),main=paste("Overall participant propensity(mid mag only) to gamble; n =",toString(sum(dmidB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dmid,title="midMag",ylim=c(0,50))
gambleRtPlot(dmid,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dmid$outcomeRT[dmid$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dmid$outcomeRT[dmid$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","midMag only"),col=c("red","blue"),title="",pch=16)
gamblePlot(dmid,title="midMag",ylim=c(0,50))
hist(dmidB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(15,35),main=paste("Overall participant propensity(mid mag only) to gamble; n =",toString(sum(dmidB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
dmidB$percentageGambled
hist(dmidB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(15,35),main=paste("Overall participant propensity(mid mag only) to gamble; n =",toString(sum(dmidB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
hist(dmidB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,35),main=paste("Overall participant propensity(mid mag only) to gamble; n =",toString(sum(dmidB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
#High mag
dhigh<-filter(d,magCond=='high',gambleDelay!=0,Trialid!=75,Trialid!=86)
dhighB<-dhigh %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dhighB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(20,40),main=paste("Overall participant propensity(high mag only) to gamble; n =",toString(sum(dhighB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dhigh,title="highMag",ylim=c(0,50))
gambleRtPlot(dhigh,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dhigh$outcomeRT[dhigh$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dhigh$outcomeRT[dhigh$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","highMag only"),col=c("red","blue"),title="",pch=16)
hist(dhighB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,40),main=paste("Overall participant propensity(high mag only) to gamble; n =",toString(sum(dhighB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
#Now value
#Low value
dlowp<-filter(d,oddsCond=='lowp',gambleDelay!=0,Trialid!=75,Trialid!=86)
dlowpB<-dlowp %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dlowpB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,50),main=paste("Overall participant propensity(low value only) to gamble; n =",toString(sum(dlowpB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dlowp,title="lowValue",ylim=c(10,20))
gambleRtPlot(dlowp,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dlowp$outcomeRT[dlowp$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dlowp$outcomeRT[dlowp$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","lowValue only"),col=c("red","blue"),title="",pch=16)
#Mid value
dmidp<-filter(d,oddsCond=='midp',gambleDelay!=0,Trialid!=75,Trialid!=86)
dmidpB<-dmidp %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dmidpB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,50),main=paste("Overall participant propensity(mid value only) to gamble; n =",toString(sum(dmidpB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dmidp,title="midValue",ylim=c(15,35))
gambleRtPlot(dmidp,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dmidp$outcomeRT[dmidp$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dmidp$outcomeRT[dmidp$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","midValue only"),col=c("red","blue"),title="",pch=16)
#High value
dhighp<-filter(d,oddsCond=='highp',gambleDelay!=0,Trialid!=75,Trialid!=86)
dhighpB<-dhighp %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
hist(dhighpB$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,50),main=paste("Overall participant propensity(high value only) to gamble; n =",toString(sum(dhighpB$ntrials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled",col='red')
gamblePlot(dhighp,title="highValue",ylim=c(50,70))
gambleRtPlot(dhighp,xlimit=c(0,5),ylimit=c(700,1000))
hist(d$outcomeRT[d$response=='gamble'],col=rgb(1,0,0,0.5), main='RTs when accepting sure thing (after ignoring gamble)', xlab='RT',breaks=70,xlim=c(0,1300))
abline(v=median(d$outcomeRT[d$response=='gamble']),col="red",lwd=2)
hist(dhighp$outcomeRT[dhighp$response=='gamble'],col=rgb(0,0,1,0.5), add=T,breaks=70)
abline(v=median(dhighp$outcomeRT[dhighp$response=='gamble']),col="blue",lwd=2)
legend(800,55,cex=.7, bty = "n",legend=c("All trials","highValue only"),col=c("red","blue"),title="",pch=16)
#New way which is better
d5<-dgamble
d5<-dgamble[dgamble$uniqueid %in% rtn,]
d5<-dgamble[dgamble$uniqueid %in% Participants,]
d5<-dgamble[dgamble$uniqueid %in% intN,]
d5<-dgamble[dgamble$uniqueid %in% catchSuccessId,]
d5<-dgamble[dgamble$uniqueid %in% male,]
d5<-dgamble[dgamble$uniqueid %in% rtn,]
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$ntrials)),"possible trials;"),xlab="Percentage of time gambled")
d5<-dgamble[dgamble$uniqueid %in% rtn,]
rnt
rnt
rtn
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$ntrials)),"possible trials;"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='Participants who show negative RT ramp')
totalRTPlot(d5,line=T,title="Participants who show negative RT ramp",ylimit=c(700,1200))
gambleRtPlot(d5,line=T,title="Participants who show negative RT ramp",ylimit=c(700,1200))
gambleRtPlot<-function(data,type='raw',eb=FALSE,line=FALSE,ylimit=c(300,1500),xlimit=c(0,5),title="",ylabel="Reaction Time (ms)"){
data<-filter(data,Trialid!=75|86,gambleRT!=0)
dRT<-data %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
stderrRT=std.error(gambleRT),
sdRT=sd(gambleRT)
# medianSpeed=median(NgambleRT),
# stderrSpeed=std.error(NgambleRT),
#sdSpeed=sd(NgambleRT),
# medianRtz=median(gambleRTz),
# sdRtz=sd(gambleRTz)
)
dRT$seconds<-dRT$binsTime
if(type=='raw'){
plot(dRT$seconds,dRT$medianRT,xlim = xlimit,ylim=ylimit,col='blue',
#main=paste("Reaction Time vs. gamble interruption time;",title),
main=paste(" GambleRT vs. gambleDelay;",title,";", "n =",toString(length(data$response[data$response=='gamble'])),
"gambled trials;",toString(length(unique(data$uniqueid))),"participants"),
xlab="Seconds into trial",ylab=ylabel,pch=19)
if(eb=='sd'){
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianRT']+(as.numeric(dRT[i,'sdRT']))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianRT']-(as.numeric(dRT[i,'sdRT']))),length=0.05, angle=90, code=3)
}
}
if(eb=='stderr'){
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianRT']+(as.numeric(dRT[i,'stderrRT']))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianRT']-(as.numeric(dRT[i,'stderrRT']))),length=0.05, angle=90, code=3)
}
}
if(line){
abline(lm(dRT$medianRT~dRT$seconds))
}
summary(lm(dRT$medianRT~dRT$seconds))
}
if(type=='speed'){
plot(dRT$seconds,dRT$medianSpeed,xlim = c(0,8),ylim=c(0.0005,.0025),
main=paste("RT speed",title,";", "n =",toString(length(data$response[data$response=='gamble'])),
"trials;",toString(length(unique(data$uniqueid))),"participants"),
xlab="Seconds into trial",ylab="Speed",pch=19)
if(eb=='sd'){
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']+(as.numeric(dRT[i,'sdSpeed']))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']-(as.numeric(dRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
}
}
if(eb=='stderr'){
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']+(as.numeric(dRT[i,'stderrSpeed']))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,'medianSpeed']-(as.numeric(dRT[i,'stderrSpeed']))),length=0.05, angle=90, code=3)
}
}
if(line){
abline(lm(dRT$medianSpeed~dRT$seconds))
}
summary(lm(dRT$medianSpeed~dRT$seconds))
}
}
gambleRtPlot(d5,line=F,title="Participants who show negative RT ramp",ylimit=c(700,1200))
gambleRtPlot(d5,line=F,title="Participants who show negative RT ramp",ylimit=c(700,1200))
#EV sensitivity early mid and late within subject
compMeans<-c(oddsScoreMean(d5,time='early'),oddsScoreMean(d5,time='mid'),oddsScoreMean(d5,time='late'))
compSds<-c(oddsScoreEb(d5,type='sem',time='early'),oddsScoreEb(d5,type='sem',time='mid'),oddsScoreEb(d5,type='sem',time='late'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; Within-session all data")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,int='early'),oddsScoreMean(d5,int='mid'),oddsScoreMean(d5,int='late'))
compSds<-c(oddsScoreEb(d5,type='sem',int='early'),oddsScoreEb(d5,type='sem',int='mid'),oddsScoreEb(d5,type='sem',int='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; When interruption happened; RespondPoorlyToValue")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="Expected Value Sensitivity; When interruption happened; Participants who show negative RT ramp")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="EV Sensitivity; When interruption happened; Participants who show negative RT ramp")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
d5<-dgamble[dgamble$uniqueid %in% highGamblers,]
#Defining subgroups
dTrials<-dgamble %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
head(dTrials)
unique(dTrials$highKeys)
respGamblers<-filter(dTrials,highKeys<50)$uniqueid
respGambers
respGamblers
midGamblers<-filter(dTrials,percentageGambled>40&percentageGambled<60)$uniqueid
midGamblers
d5<-dgamble[dgamble$uniqueid %in% respGamblers,] #not very many high keys
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
#How much did each participant choose to gamble
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$ntrials)),"possible trials;"),xlab="Percentage of time gambled")
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
d5Behavioral
toString(length(unique(d5Behavioral$uniqueid)))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$ntrials)),"possible trials;",toString(length(unique(d5Behavioral$uniqueid))),"participants"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='responsibleN')
gambleRtPlot(d5,line=F,title="responsibleN",ylimit=c(700,1200))
gambleRtPlot(d5,line=F,title="responsibleN",ylimit=c(800,900))
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,int='early'),oddsScoreMean(d5,int='mid'),oddsScoreMean(d5,int='late'))
compSds<-c(oddsScoreEb(d5,type='sem',int='early'),oddsScoreEb(d5,type='sem',int='mid'),oddsScoreEb(d5,type='sem',int='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="EV Sensitivity; When interruption happened; responsibleN")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
d5<-dgamble[dgamble$uniqueid %in% midGamblers,] #gambled between 40 and 60
#This is if you want filters
summaryMagFilter=F
summaryMagCond='high'
summaryOddsFilter=F
summaryOddsCond='highp'
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
d5<-filter(d5,magCond==summaryMagCond)
}
if(summaryOddsFilter){
d5<-filter(d5,oddsCond==summaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$ignoreRT[d5$ignoreRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
successTrials=sum(response=='success'),
failedTrials=sum(response=='fail'|response=='failOutcome'|response=='earlyFail'),
percentageGambled=round(gambleCount/ntrials*100),
highKeys=sum(recordedNumber>20))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,20),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$ntrials)),"possible trials;",toString(length(unique(d5Behavioral$uniqueid))),"participants"),xlab="Percentage of time gambled")
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='responsibleN')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(20,60),title='midGamblers')
gamblePlot(d5,orig=T,eb='sem',ylimit=c(40,60),title='midGamblers')
gambleRtPlot(d5,line=F,title="midGamblers",ylimit=c(800,900))
gambleRtPlot(d5,line=F,title="midGamblers",ylimit=c(500,900))
gambleRtPlot(d5,line=F,title="midGamblers",ylimit=c(700,900))
switchPlot(f5)
switchPlot(d5)
switchPlot(d5,ylim=c(0,800))
switchPlot(d5,ylim=c(150,300))
#EV sensitivity early mid and late
compMeans<-c(oddsScoreMean(d5,int='early'),oddsScoreMean(d5,int='mid'),oddsScoreMean(d5,int='late'))
compSds<-c(oddsScoreEb(d5,type='sem',int='early'),oddsScoreEb(d5,type='sem',int='mid'),oddsScoreEb(d5,type='sem',int='sem'))
pg9<-barplot(compMeans,names.arg = c("Early","Mid","Late"),ylim=c(0,80),
ylab="Proportion of high value trials - low value trials",main="EV Sensitivity; When interruption happened; midGamblers")
arrows(pg9,compMeans-compSds,pg9,compMeans+compSds,lwd=2,angle=90,code=3)
d5<-dgamble[dgamble$uniqueid %in% respGamblers,] #not very many high keys
switchPlot(d5,ylim=c(150,300))
d5<-dgamble[dgamble$uniqueid %in% rtn,]
switchPlot(d5,ylim=c(150,300))
d5<-dgamble[dgamble$uniqueid %in% rtn,]
switchPlot(d5,ylim=c(150,300))
