#Whenever they claimed 'boring' reward
outcomeRTs<-d$outcomeRT[d$outcomeRT!=0]
hist(outcomeRTs,main=c("Aggregated outcome RTs; number of trials:",length(outcomeRTs)),breaks=70)
#Printing experiment times in minutes CONFIRM PSITURK TRACKS IN MILLISECONDS
expTimes<-((unique(d$expTime,na.rm=TRUE)/1000)/60)
hist(expTimes,main="Experiment Time (in minutes)",breaks=50,xlim=c(0,120))
#Removing participants who gambled too much/not enough
dgamble0<-filter(d,gambleDelay!=0)
dBehavioralTotal<-dgamble0 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#head(dBehavioralTotal)
#Overall preference for gambling
hist(dBehavioralTotal$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall participant propensity(everyone) to gamble; n =",toString(sum(dBehavioralTotal$trials)),"trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
dlowG<-filter(dBehavioralTotal,percentageGambled<6)
noGamblers<-dlowG$uniqueid
dhighg<-filter(dBehavioralTotal,percentageGambled>95)
allGamblers<-dhighg$uniqueid
lowTrials<-filter(dBehavioralTotal,trials<50)$uniqueid
removeIds<-c(noGamblers,allGamblers,lowTrials)
#Removing any subjects from dataset, using unique ids in vector removeIds
for(i in removeIds){
d<-d[!(d$uniqueid==i),]
}
#Now this is refined number of participants
nParticipants<- length(unique(d$uniqueid))
Participants<-unique(d$uniqueid)
nParticipants
#######################################################################################################
#Clearing pictures
graphics.off()
#Behavioral analyses
dgamble<-filter(d,gambleDelay!=0)
dBehavioral<-dgamble %>%
group_by(uniqueid) %>%
summarise(experimentTime=unique(expTime)[2],
trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
hist(dBehavioral$percentageGambled,breaks=50,xlim=c(-5,100),ylim=c(0,25),main=paste("Overall propensity to gamble; n =",toString(sum(dBehavioral$trials))," possible trials;",nParticipants,"subj"),xlab="Percentage of time gambled")
boxplot(dBehavioral$percentageGambled,ylim=c(0,100),main=paste("Distribution of gambling percentages across everyone; mean G % = ",toString(mean(dBehavioral$percentageGambled))),ylab="Percentage gambled (per participant)")
#Remaking behavioral histograms
#Whenever they gambled
gambleRTs<-dgamble$gambleRT[d$gambleRT!=0]
hist(gambleRTs,main=paste("Aggregated gamble RTs; ",toString(sum(dBehavioral$gambleCount)),"trials gambled"),breaks=70)
c("Numberof trials that they gambled on: ",toString(sum(dBehavioral$gambleCount)))
#Whenever they claimed guaranteed reward
outcomeRTs<-d$outcomeRT[d$outcomeRT!=0]
hist(outcomeRTs,main=paste("Aggregated outcome RTs; ",toString(length(outcomeRTs)),"trials accepted sure thing"),breaks=70)
c("Number of trials that they accepted sur thing: ",length(outcomeRTs))
#Number of trials per participant
dTrials<-d %>%
group_by(uniqueid) %>%
summarise(ntrials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/ntrials*100))
#dTrials
hist(dTrials$ntrials,breaks=50,xlim=c(0,120),main=paste("Number of trials per participant; ",nParticipants,"participants"),xlab="Number of Trials per participant")
#Logistic regression models to predict gambled
#Need to figure out which one to use
mlog<-glm(gambled~rpe3+oddsCond,
data=dgamble,family="binomial");
summary(mlog)
mlog2<-glm(gambled~trialNumber+rpe1+
gambleDelay+oddsCond+magCond+rpe2,
data=dgamble,family="binomial");
summary(mlog2)
library(lme4)
dgamble[,'oddsCondf'] <- as.factor(dgamble[,'oddsCond'])
mlmerog<-glmer(gambled~scale(gambleDelay)+oddsCondf+(scale(gambleDelay)+oddsCondf|uniqueid),
data=dgamble,family="binomial");
summary(mlmerog)
##Total data
c("Number of trials that they gambled on: ",length(dgamble$response[dgamble$response=='gamble']))
c("Number of trials that they had the chance to gamble on: ",length(dgamble$response))
#By GambleDelay
d2<-d %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(gambleRT))
d2$seconds<-d2$binsTime
d2=filter(d2,binsTime!=0)
d2
#Interesting plot of gambleDelay vs propensity to gamble. NEED TO ADD SDS HERE
plot(d2$seconds,d2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Total group data; Gamble propensity; n =",toString(sum(d2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting gamble RTs with sd
dRT<-filter(dgamble,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=median(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=median(NgambleRT),
sdSpeed=sd(NgambleRT))
dRT$seconds<-dRT$binsTime
#This is raw RT
plot(dRT$seconds,dRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; total data; median RT with sd; n =",toString(sum(d2$trials)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(dRT$seconds)){
arrows(as.numeric(dRT$seconds[i]),as.numeric(dRT[i,2]+(as.numeric(dRT[i,3]))),as.numeric(dRT$seconds[i]),as.numeric(dRT[i,2]-(as.numeric(dRT[i,3]))),length=0.05, angle=90, code=3)
}
########################################################################################################################################
##Breaking down by 6 sub conditions - mag/odds
#How does mag affect gamble propensity
#Low mag =Guaranteed amount = $1 or $2
#Mid mag =Guaranteed amount = $3 or $4
#High mag =Guaranteed amount = $5 or $6
#Low mag
dlow<-filter(dgamble,standardGamble==1|standardGamble==2)
c("Number of trials that they gambled on: ",length(dlow$gambleRT[dlow$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dlow$gambleDelay))
#By uniqueId
dBehavioralLow<-dlow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralLow$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low-mag gambles; n =",toString(sum(dBehavioralLow$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dlow$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT low mag gambles; n =",toString(sum(dBehavioralLow$gambleCount)),"gambled trials;",toString(length(dBehavioralLow$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dlow2<-dlow %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dlow2$seconds<-dlow2$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dlow2$seconds,dlow2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Low mag; Gamble propensity; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dlowRT<-filter(dlow,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dlowRT$seconds<-dlowRT$binsTime
plot(dlowRT$seconds,dlowRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Low mag; median RT with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dlowRT$seconds)){
#  arrows(as.numeric(dlowRT$seconds[i]),as.numeric(dlowRT[i,2]+(as.numeric(dlowRT[i,3]))),as.numeric(dlowRT$seconds[i]),as.numeric(dlowRT[i,2]-(as.numeric(dlowRT[i,3]))),length=0.05, angle=90, code=3)
#}
#Speed
#Still need to figure out errorBars
#plot(dlowRT$seconds,dlowRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Low mag; median Speed with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dlowRT$seconds)){
#  arrows(as.numeric(dlowRT$seconds[i]),as.numeric(dlowRT[i,'medianSpeed']+(as.numeric(dlowRT[i,'sdSpeed']))),as.numeric(dlowRT$seconds[i]),as.numeric(dlowRT[i,'medianSpeed']-(as.numeric(dlowRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
##Mid mag
dmid<-filter(dgamble,standardGamble==3|standardGamble==4)
c("Number of trials that they gambled on: ",length(dmid$gambleRT[dmid$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dmid$gambleDelay))
#By uniqueId
dBehavioralMid<-dmid %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralMid$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on mid-mag gambles; n =",toString(sum(dBehavioralMid$trials)),"possible trials;",toString(length(dBehavioralMid$uniqueid)),"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dmid$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT mid mag gambles; n =",toString(sum(dBehavioralMid$gambleCount)),"gambled trials; ",toString(length(dBehavioralLow$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dmid2<-dmid %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dmid2$seconds<-dmid2$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dmid2$seconds,dmid2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Mid mag; Gamble propensity; n =",toString(sum(dmid2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dmidRT<-filter(dmid,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dmidRT$seconds<-dmidRT$binsTime
plot(dmidRT$seconds,dmidRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Mid mag; median RT with sd; n =",toString(sum(dmid2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(dmidRT$seconds)){
arrows(as.numeric(dmidRT$seconds[i]),as.numeric(dmidRT[i,'medianRT']+(as.numeric(dmidRT[i,'sdRT']))),as.numeric(dmidRT$seconds[i]),as.numeric(dmidRT[i,'medianRT']-(as.numeric(dmidRT[i,'sdRT']))),length=0.05, angle=90, code=3)
}
#Speed
#Still need to figure out errorBars / how to average
#plot(dmidRT$seconds,dmidRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Mid mag; median Speed with sd; n =",toString(sum(dmidRT$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dmidRT$seconds)){
#  arrows(as.numeric(dmidRT$seconds[i]),as.numeric(dmidRT[i,'medianSpeed']+(as.numeric(dmidRT[i,'sdSpeed']))),as.numeric(dmidRT$seconds[i]),as.numeric(dmidRT[i,'medianSpeed']-(as.numeric(dmidRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
##High mag
dhigh<-filter(dgamble,standardGamble==5|standardGamble==6)
c("Number of trials that they gambled on: ",length(dhigh$gambleRT[dhigh$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dhigh$gambleDelay))
#By uniqueId
dBehavioralHigh<-dhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralHigh$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on high mag gambles; n =",toString(sum(dBehavioralHigh$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dhigh$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT high mag gambles; n =",toString(sum(dBehavioralHigh$gambleCount)),"gambled trials;",toString(length(dBehavioralHigh$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dhigh2<-dhigh %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dhigh2$seconds<-dhigh2$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dhigh2$seconds,dhigh2$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("High mag; Gamble propensity; n =",toString(sum(dhigh2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dhighRT<-filter(dhigh,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dhighRT$seconds<-dhighRT$binsTime
plot(dhighRT$seconds,dhighRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; High mag; median RT with sd; n =",toString(sum(dhigh2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dhighRT$seconds)){
#  arrows(as.numeric(dhighRT$seconds[i]),as.numeric(dhighRT[i,'medianRT']+(as.numeric(dhighRT[i,'sdRT']))),as.numeric(dhighRT$seconds[i]),as.numeric(dhighRT[i,'medianRT']-(as.numeric(dhighRT[i,'sdRT']))),length=0.05, angle=90, code=3)
#}
#Speed
#Still need to figure out errorBars
#plot(dhighRT$seconds,dhighRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; High mag; median Speed with sd; n =",toString(sum(dhigh2$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dhighRT$seconds)){
#  arrows(as.numeric(dhighRT$seconds[i]),as.numeric(dhighRT[i,'medianSpeed']+(as.numeric(dhighRT[i,'sdSpeed']))),as.numeric(dhighRT$seconds[i]),as.numeric(dhighRT[i,'medianSpeed']-(as.numeric(dhighRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
#How does odds(payout) affect gamble propensity
#Low odds = 1.5 x standard gamble
#Mid odds = 2 x standard gamble
#High odds = 3 x standard gamble
##Low odds
dlowp<-filter(dgamble,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
c("Number of trials that they gambled on: ",length(dlow$gambleRT[dlowp$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dlowp$gambleDelay))
#By uniqueId
dBehavioralLowp<-dlowp %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralLowp$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on low odds gambles; n =",toString(sum(dBehavioralLowp$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dlowp$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT low mag gambles; n =",toString(sum(dBehavioralLowp$gambleCount)),"gambled trials;",toString(length(dBehavioralLowp$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dlow2p<-dlowp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dlow2p$seconds<-dlow2p$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dlow2p$seconds,dlow2p$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Low odds; Gamble propensity; n =",toString(sum(dlow2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dlowpRT<-filter(dlowp,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dlowpRT$seconds<-dlowpRT$binsTime
plot(dlowpRT$seconds,dlowpRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Low odds; median RT with sd; n =",toString(sum(dlow2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dlowpRT$seconds)){
#  arrows(as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,2]+(as.numeric(dlowpRT[i,3]))),as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,2]-(as.numeric(dlowpRT[i,3]))),length=0.05, angle=90, code=3)
#}
#Speed
#Still need to figure out errorBars
#plot(dlowpRT$seconds,dlowpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Low odds; median Speed with sd; n =",toString(sum(dlowp2$gambleCount)),"trials;"),
#     xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#for(i in 1:length(dlowpRT$seconds)){
#  arrows(as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,'medianSpeed']+(as.numeric(dlowpRT[i,'sdSpeed']))),as.numeric(dlowpRT$seconds[i]),as.numeric(dlowpRT[i,'medianSpeed']-(as.numeric(dlowpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
#}
##Mid odds
dmidp<-filter(dgamble,Trialid==1|Trialid==2|Trialid==3|Trialid==4|Trialid==5|Trialid==6)
c("Number of trials that they gambled on: ",length(dmidp$gambleRT[dmidp$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dmidp$gambleDelay))
#By uniqueId
dBehavioralMidp<-dmidp %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralMidp$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on mid odds gambles; n =",toString(sum(dBehavioralMidp$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dmidp$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT mid mag gambles; n =",toString(sum(dBehavioralMidp$gambleCount)),"gambled trials;",toString(length(dBehavioralMidp$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dmid2p<-dmidp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dmid2p$seconds<-dmid2p$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dmid2p$seconds,dmid2p$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Mid odds; Gamble propensity; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dmidpRT<-filter(dmidp,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dmidpRT$seconds<-dmidpRT$binsTime
plot(dmidpRT$seconds,dmidpRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Mid odds; median RT with sd; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dmidpRT$seconds)){
#   arrows(as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,2]+(as.numeric(dmidpRT[i,3]))),as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,2]-(as.numeric(dmidpRT[i,3]))),length=0.05, angle=90, code=3)
# }
# #Speed
# #Still need to figure out errorBars
# plot(dmidpRT$seconds,dmidpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; Mid odds; median Speed with sd; n =",toString(sum(dmid2p$gambleCount)),"trials;"),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dmidpRT$seconds)){
#   arrows(as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,'medianSpeed']+(as.numeric(dmidpRT[i,'sdSpeed']))),as.numeric(dmidpRT$seconds[i]),as.numeric(dmidpRT[i,'medianSpeed']-(as.numeric(dmidpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
# }
##High odds
dhighp<-filter(dgamble,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
c("Number of trials that they gambled on: ",length(dhighp$gambleRT[dhighp$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on: ",length(dhighp$gambleDelay))
#By uniqueId
dBehavioralHighp<-dhighp %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(dBehavioralHighp$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble on high odds gambles; n =",toString(sum(dBehavioralHighp$trials))," possible trials;",nParticipants,"participants"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(dhighp$gambleRT,0),xlim=c(0,1200),breaks=50,main=paste("RT high mag gambles; n =",toString(sum(dBehavioralHighp$gambleCount)),"gambled trials;",toString(length(dBehavioralHighp$uniqueid)),"participants"),xlab="Reaction time")
#By GambleDelay
dhigh2p<-dhighp %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(setdiff(gambleRT,0)))
dhigh2p$seconds<-dhigh2p$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(dhigh2p$seconds,dhigh2p$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("High odds; Gamble propensity; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
dhighpRT<-filter(dhighp,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT))
dhighpRT$seconds<-dhighpRT$binsTime
plot(dhighpRT$seconds,dhighpRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; High odds; median RT with sd; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dhighpRT$seconds)){
#   arrows(as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,2]+(as.numeric(dhighpRT[i,3]))),as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,2]-(as.numeric(dhighpRT[i,3]))),length=0.05, angle=90, code=3)
# }
# #Speed
# #Still need to figure out errorBars
# plot(dhighpRT$seconds,dhighpRT$medianSpeed,xlim = c(0,8),ylim=c(),main=paste("Group data; High odds; median Speed with sd; n =",toString(sum(dhigh2p$gambleCount)),"trials;"),
#      xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
# for(i in 1:length(dhighpRT$seconds)){
#   arrows(as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,'medianSpeed']+(as.numeric(dhighpRT[i,'sdSpeed']))),as.numeric(dhighpRT$seconds[i]),as.numeric(dhighpRT[i,'medianSpeed']-(as.numeric(dhighpRT[i,'sdSpeed']))),length=0.05, angle=90, code=3)
# }
head(d)
hist(dgamble$gambleRTz[dgamble$gambleRTz!=0])
hist(dgamble$gambleRTz[dgamble$gambleRTz!=0],breaks=50)
head(dlow)
plot(dlowRT$seconds,dlowRT$medianRTz,xlim = c(0,8),main=paste("Group data; Low mag; median RT z with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
plot(dlowRT$seconds,dlowRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; Low mag; median RT with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
plot(dlowRT$seconds,dlowRT$medianRTz,xlim = c(0,8),main=paste("Group data; Low mag; median RT z with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
#Plotting RTs with sd
dlowRT<-filter(dlow,response=='gamble') %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianSpeed=mean(NgambleRT),
sdSpeed=sd(NgambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
plot(dlowRT$seconds,dlowRT$medianRTz,xlim = c(0,8),main=paste("Group data; Low mag; median RT z with sd; n =",toString(sum(dlow2$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
dlowRT
mag="high"
odds="mid"
#Breaking down by mag condition?
if(mag=="low"){
d5=dlow
} else if(mag=="mid"){
d5=dmid
} else if (mag=="high"){
d5=dhigh}
#If you dont want both, run the following line which resets
d5=dgamble
#Breaking down by odds condition?
if(odds=="low"){
d5=filter(dgamble,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
} else if(odds=="mid"){
d5=filter(dgamble,Trialid==1|Trialid==2|Trialid==3|Trialid==4|Trialid==5|Trialid==6)
} else if(odds=="high"){
d5=filter(dgamble,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
}
lowOdds<-c(1:6)
lowOdds
lowOdds<-c(1:6)
midOdds<-c(21:26)
highOdds<-c(31:36)
Participants
dsub<-d[d$uniqueid==p,]
d3<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d3$seconds<-d3$binsTime
plot(d3$seconds,d3$percentageGambled,xlim = c(0,7),ylim = c(0,100),
main=paste("Individual participant data (all trials); n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled")
par(ps = 12, cex = 1, cex.main = 1)
####The following is to just get one participant's data
p=270
dsub<-d[d$uniqueid==p,]
d3<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d3$seconds<-d3$binsTime
par(ps = 12, cex = 1, cex.main = 1)
plot(d3$seconds,d3$percentageGambled,xlim = c(0,7),ylim = c(0,100),
main=paste("Individual participant data (all trials); n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled")
mtemp<-lm(d3$percentageGambled~d3$seconds)
summary(mtemp)
#One participant RT
d3RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d3RT$seconds<-d3RT$binsTime
plot(d3RT$seconds,d3RT$meanRT,xlim = c(0,8),ylim=c(200,1500),main=paste("All gambles; Reaction time with sd; n =",toString(sum(d3$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
for(i in 1:length(d3RT$seconds)){
arrows(as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]+(as.numeric(d3RT[i,3]))),as.numeric(d3RT$seconds[i]),as.numeric(d3RT[i,2]-(as.numeric(d3RT[i,3]))),length=0.05, angle=90, code=3)
}
msubRT<-lm(d3RT$meanRT~d3RT$seconds)
#One participant RT
d3RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT),
medianRtz=median(gambleRTz),
sdRtz=sd(gambleRTz))
3RT
d3RT
mean(medianRTz)
mean(d3RT$medianRTz)
