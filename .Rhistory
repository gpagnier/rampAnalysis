group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(tempRTdf$gambleRT~tempRTdf$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
}
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
#slopeDF analysis for indiv. subgroup
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main=paste('rt rampers n=',toString(length(slopeDF$gambleSlopes))),xlim=c(-1,1),ylim=c(-90,50))
#with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
summary(m1<-lm(slopeDF$rtSlopes~slopeDF$gambleSlopes))
abline(m1)
cor(slopeDF$rtSlopes~slopeDF$gambleSlopes)
slopeDF
subplotRT=TRUE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
for(i in intN){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(tempRTdf$gambleRT~tempRTdf$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
}
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main=paste('gamble rampers n=',toString(length(slopeDF$gambleSlopes))),xlim=c(-1,1),ylim=c(-90,50))
rtN
length(catchSuccessId)
#This filters summary d5 by odds/mag if specified above via T/F
if(summaryMagFilter){
filter(d5,magCond==SummaryMagCond)
}
if(summaryOddsFilter){
filter(d5,oddsCond==SummaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$gambleRT[d5$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(d5$gambleRT,0),xlim=c(0,1500),breaks=50,main=paste("RT; n =",toString(sum(d5Behavioral$gambleCount)),"gambled trials;"),xlab="Reaction time")
#By GambleDelay
d52<-d5 %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(gambleRT))
d52$seconds<-d52$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(d52$seconds,d52$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Gamble propensity; n =",toString(sum(d52$gambleCount))," gambled trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
plot(d52$seconds,d52$percentageGambled,xlim = c(0,8),ylim = c(40,65),
main=paste("Gamble propensity; n =",toString(sum(d52$gambleCount)),"gambled trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
d5pRT<-filter(d5,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
d5pRT$seconds<-d5pRT$binsTime
plot(d5pRT$seconds,d5pRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; median RT with sd; n =",toString(sum(d52$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
d5high<-filter(d5,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
d5low<-filter(d5,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get Odds score and mag score
d5behavioralHigh<-d5high %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d5behavioralLow<-d5low %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsScore<-mean(d5behavioralHigh$percentageGambled)-mean(d5behavioralLow$percentageGambled)
oddsScore
#Sig effect of gambleDelay on gambling?
summary(glm(gambled~gambleDelay,
data=filter(d5,gambleDelay!=0),family="binomial"))
#Sig effect of gambleDelay on RT when gambling?
d6<-filter(d5,response=='gamble')
summary(glm(gambleRT~gambleDelay,
data=d6))
#Overlaying histograms
#d5 should be defined above
rthigh<-filter(d,response=='success')
rtlow<-filter(d5,response=='success')
hist(rthigh$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,1300))
abline(v=median(rthigh$outcomeRT),col="red",lwd=2)
hist(rtlow$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtlow$outcomeRT),col="blue",lwd=2)
rthigh<-filter(d,response=='gamble')
rtlow<-filter(d5,response=='gamble')
hist(rthigh$gambleRT,col=rgb(1,0,0,0.5), main='RTs when gambling', xlab='RT',breaks=40,xlim=c(0,1300))
abline(v=median(rthigh$gambleRT),col="red",lwd=2)
hist(rtlow$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtlow$gambleRT),col="blue",lwd=2)
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=TRUE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
for(i in catchSuccessId){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(tempRTdf$gambleRT~tempRTdf$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
}
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
#slopeDF analysis for indiv. subgroup
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main=paste('Passed-catch gamblers n=',toString(length(slopeDF$gambleSlopes))),xlim=c(-1,1),ylim=c(-90,50))
#with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
summary(m1<-lm(slopeDF$rtSlopes~slopeDF$gambleSlopes))
abline(m1)
cor(slopeDF$rtSlopes~slopeDF$gambleSlopes)
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main=paste('Passed-catch gamblers n=',toString(length(slopeDF$gambleSlopes))),xlim=c(-1,1),ylim=c(-90,50))
plot(d52$seconds,d52$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Gamble propensity; n =",toString(sum(d52$gambleCount)),"gambled trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
oddsN
d5<-dgamble[dgamble$uniqueid %in% oddsN,]
ds/mag if specified above via T/F
if(summaryMagFilter){
filter(d5,magCond==SummaryMagCond)
}
if(summaryOddsFilter){
filter(d5,oddsCond==SummaryOddsCond)
}
c("Number of trials that they gambled on:",length(d5$gambleRT[d5$gambleRT!=0]))
c("Number of trials that they had the chance to gamble on:",length(d5$gambleDelay))
#By uniqueId
d5Behavioral<-d5 %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
#How much did each participant choose to gamble
hist(d5Behavioral$percentageGambled,breaks=50,ylim=c(0,50),xlim=c(-5,100),main=paste("Propensity to gamble; n =",toString(sum(d5Behavioral$trials)),"possible trials;"),xlab="Percentage of time gambled")
#RTs histogram
hist(setdiff(d5$gambleRT,0),xlim=c(0,1500),breaks=50,main=paste("RT; n =",toString(sum(d5Behavioral$gambleCount)),"gambled trials;"),xlab="Reaction time")
#By GambleDelay
d52<-d5 %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100),
medianRT=median(setdiff(gambleRT,0)),
sdRT=sd(gambleRT))
d52$seconds<-d52$binsTime
#Interesting plot of gambleDelay vs propensity to gamble. Add sds? May be meaningless..
plot(d52$seconds,d52$percentageGambled,xlim = c(0,8),ylim = c(0,100),
main=paste("Gamble propensity; n =",toString(sum(d52$gambleCount))," gambled trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
plot(d52$seconds,d52$percentageGambled,xlim = c(0,8),ylim = c(35,50),
main=paste("Gamble propensity; n =",toString(sum(d52$gambleCount)),"gambled trials;"),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
#Plotting RTs with sd
d5pRT<-filter(d5,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(medianRT=mean(gambleRT),
sdRT=sd(gambleRT))
d5pRT$seconds<-d5pRT$binsTime
plot(d5pRT$seconds,d5pRT$medianRT,xlim = c(0,8),ylim=c(400,900),main=paste("Group data; median RT with sd; n =",toString(sum(d52$gambleCount)),"trials;"),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
d5high<-filter(d5,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
d5low<-filter(d5,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get Odds score and mag score
d5behavioralHigh<-d5high %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d5behavioralLow<-d5low %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsScore<-mean(d5behavioralHigh$percentageGambled)-mean(d5behavioralLow$percentageGambled)
oddsScore
#Sig effect of gambleDelay on gambling?
summary(glm(gambled~gambleDelay,
data=filter(d5,gambleDelay!=0),family="binomial"))
#Sig effect of gambleDelay on RT when gambling?
d6<-filter(d5,response=='gamble')
summary(glm(gambleRT~gambleDelay,
data=d6))
#Overlaying histograms
#d5 should be defined above
rthigh<-filter(d,response=='success')
rtlow<-filter(d5,response=='success')
hist(rthigh$outcomeRT,col=rgb(1,0,0,0.5), main='RTs when accepting sure thing', xlab='RT',breaks=40,xlim=c(0,1300))
abline(v=median(rthigh$outcomeRT),col="red",lwd=2)
hist(rtlow$outcomeRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtlow$outcomeRT),col="blue",lwd=2)
rthigh<-filter(d,response=='gamble')
rtlow<-filter(d5,response=='gamble')
hist(rthigh$gambleRT,col=rgb(1,0,0,0.5), main='RTs when gambling', xlab='RT',breaks=40,xlim=c(0,1300))
abline(v=median(rthigh$gambleRT),col="red",lwd=2)
hist(rtlow$gambleRT,col=rgb(0,0,1,0.5), add=T,breaks=40)
abline(v=median(rtlow$gambleRT),col="blue",lwd=2)
#Looping through subgroups to get INDIVIDUAL graphs
subplotRT=TRUE
subplotGD=FALSE
soddsN=NULL
oddsScoreKnob=FALSE
magScoreKnob=FALSE
smagN=NULL
rtSlopes<-NULL
gambleSlopes<-NULL
run<-NULL
slopeDF<-NULL
#Want to look at subgroups of participants?
oddsFilter<-FALSE
subOddsCond<-'highp'
MagFilter<-FALSE
subMagCond<-'high'
for(i in oddsN){
print(i)
dsub<-filter(d,uniqueid==i)
if(oddsFilter){
dsub<-filter(dsub,oddsCond==subOddsCond)
}
if(MagFilter){
dsub<-filter(dsub,magCond==subMagCond)
}
if(oddsScoreKnob){
dsubhigh<-filter(dsub,Trialid==31|Trialid==32|Trialid==33|Trialid==34|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==21|Trialid==22|Trialid==23|Trialid==24|Trialid==25|Trialid==26)
#Breaking down by subFilter to get OddsScore
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
oddsNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
oddsNtemp[1,2]=as.character(i)
soddsN=rbind(soddsN,oddsNtemp)}
#Breaking down by subFilter to get MagScore
if(magScoreKnob){
dsubhigh<-filter(dsub,Trialid==5|Trialid==6|Trialid==25|Trialid==26|Trialid==35|Trialid==36)
dsublow<-filter(dsub,Trialid==1|Trialid==2|Trialid==21|Trialid==22|Trialid==31|Trialid==32)
d4behavioralHigh<-dsubhigh %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4behavioralLow<-dsublow %>%
group_by(uniqueid) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
magNtemp[1,1]=as.integer(d4behavioralHigh$gambleCount-d4behavioralLow$gambleCount)
magNtemp[1,2]=as.character(i)
smagN=rbind(smagN,magNtemp)
}
#Breaking down subdf by gambleDelay
d4<-dsub %>%
group_by(binsTime) %>%
summarise(trials=length(trialNumber),
gambleCount=sum(response=="gamble"),
didNotGamble=sum(response=="fail"|response=="success"),
percentageGambled=round(gambleCount/trials*100))
d4$seconds<-d4$binsTime
if (subplotGD){
plot(d4$seconds,d4$percentageGambled,xlim = c(1,7),ylim = c(0,100),
main=paste("Individual participant data; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Percentage Gambled",pch=19)
}
#Have to put in a check to see if they actually gambled
if(sum(d4$percentageGambled)>0){
#One participant RT
d4RT<-filter(dsub,gambleRT!=0) %>%
group_by(binsTime) %>%
summarise(meanRT=mean(gambleRT),
sdRT=sd(gambleRT))
d4RT$seconds<-d4RT$binsTime
if (subplotRT){
plot(d4RT$seconds,d4RT$meanRT,xlim = c(0,8),ylim=c(400,1000),
main=paste("Individual participant RT; n =",toString(sum(d4$trials)),"trials;","participant:",toString(unique(dsub$uniqueid))),
xlab="Seconds into trial",ylab="Reaction time (seconds)",pch=19)
}
#This is tracking all the gamble slopes of everyone in subgroup
mlogtemp<-glm(gambled~gambleDelay,data=filter(dsub,gambleDelay!=0),family="binomial")
gambleSlopes<-c(gambleSlopes,summary(mlogtemp)$coefficients[2])
tempRTdf<-filter(dsub,response=='gamble')
mtempRT<-lm(tempRTdf$gambleRT~tempRTdf$gambleDelay)
#This is tracking all the RT slopes of everyone in subgroup
rtSlopes<-c(rtSlopes,summary(mtempRT)$coefficients[2])
run<-c(run,i)
}
}
slopeDF<-data.frame(cbind(run,rtSlopes,gambleSlopes))
#slopeDF analysis for indiv. subgroup
plot(slopeDF$rtSlopes~slopeDF$gambleSlopes,xlab='gambleSlopes',ylab='rtSlopes',main=paste('logical gamblers n=',toString(length(slopeDF$gambleSlopes))),xlim=c(-1,1),ylim=c(-90,50))
#with(slopeDF, text(slopeDF$rtSlopes~slopeDF$gambleSlopes, labels = slopeDF$run,cex=.8), pos = 2)
summary(m1<-lm(slopeDF$rtSlopes~slopeDF$gambleSlopes))
